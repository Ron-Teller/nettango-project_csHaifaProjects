{"spaces":[{"id":0,"spaceId":"ntb-defs-0","name":"Population 1","width":480,"height":700,"defs":{"version":5,"height":700,"width":480,"blocks":[{"id":1,"action":"Configure Population","required":true,"placement":"starter","format":"to configure-population-1\n  #nettango#set-current-population-of-properties-being-set 1","isTerminal":true,"limit":1,"blockColor":"#09aa14","clauses":[{"children":[],"action":"Properties","open":"if true ["},{"children":[],"action":"Actions","open":"if true ["},{"children":[],"action":"Interactions","open":"if true ["}]},{"id":2,"action":"Color","required":false,"placement":"child","format":"set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","def":"15","name":"Color","quoteValues":"never-quote","default":"15","values":[{"actual":"15","display":"Red"},{"actual":"25","display":"Orange"},{"actual":"35","display":"Brown"},{"actual":"45","display":"Yellow"},{"actual":"55","display":"Green"},{"actual":"65","display":"Lime"},{"actual":"75","display":"Turquoise"},{"actual":"85","display":"Cyan"},{"actual":"95","display":"Sky"},{"actual":"105","display":"Blue"},{"actual":"115","display":"Violet"},{"actual":"125","display":"Magenta"},{"actual":"135","display":"Pink"},{"actual":"9.9","display":"White"},{"actual":"5","display":"Gray"}]}]},{"id":3,"action":"Size","required":false,"placement":"child","format":"set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","def":0.5,"name":"Size","step":0.1,"random":false,"default":0.5,"min":0.1,"max":3}]},{"id":4,"action":"Heading","required":false,"placement":"child","format":"set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","default":"\"random\"","values":[{"actual":"\"random\"","display":"Random"},{"actual":"270","display":"Left"},{"actual":"90","display":"Right"},{"actual":"0","display":"Up"},{"actual":"180","display":"Down"}]}]},{"id":5,"action":"Speed","required":false,"placement":"child","format":"set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","def":10,"name":"Speed","step":1,"random":false,"default":10,"min":1,"max":50}]},{"id":8,"action":"Group","required":false,"placement":"child","format":"set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" {0}","blockColor":"#f9960b","params":[{"id":0,"type":"text","name":"Name"}]},{"id":6,"action":"Move Forever","required":false,"placement":"child","format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true","blockColor":"#b65db0"},{"id":7,"action":"Move X Steps","required":false,"placement":"child","format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#b65db0","params":[{"id":0,"type":"range","name":"Amount of steps","step":1,"random":false,"default":20,"min":0,"max":100}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[],"open":"if true [","close":"]"},{"children":[],"action":"then","open":"if true [","close":"]"}]},{"id":10,"action":"Wall","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"wall\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":19,"action":"Gravity Field","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"gravity-field\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":20,"action":"Electric Field","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"electric-field\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":12,"action":"Ball From Same Group","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":14,"action":"Ball From Other Group","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":16,"action":"Heading","required":false,"placement":"child","format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","def":"\"collide\"","name":"Heading","quoteValues":"never-quote","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":18,"action":"Field Strength","required":false,"placement":"child","format":"#nettango#set-field {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"int","name":"Strength","step":1,"default":10}]}],"program":{"chains":[{"x":33,"y":136,"blocks":[]},{"x":30,"y":21,"blocks":[{"id":1,"action":"Configure Population","required":true,"placement":"starter","instanceId":0,"format":"to configure-population-1\n  #nettango#set-current-population-of-properties-being-set 1","isTerminal":true,"blockColor":"#09aa14","clauses":[{"children":[{"id":8,"action":"Group","required":false,"placement":"child","instanceId":1,"format":"set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" {0}","blockColor":"#f9960b","params":[{"id":0,"type":"text","name":"Name","value":"group-1"}]},{"id":2,"action":"Color","required":false,"placement":"child","instanceId":2,"format":"set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Color","quoteValues":"never-quote","value":"65","default":"15","values":[{"actual":"15","display":"Red"},{"actual":"25","display":"Orange"},{"actual":"35","display":"Brown"},{"actual":"45","display":"Yellow"},{"actual":"55","display":"Green"},{"actual":"65","display":"Lime"},{"actual":"75","display":"Turquoise"},{"actual":"85","display":"Cyan"},{"actual":"95","display":"Sky"},{"actual":"105","display":"Blue"},{"actual":"115","display":"Violet"},{"actual":"125","display":"Magenta"},{"actual":"135","display":"Pink"},{"actual":"9.9","display":"White"},{"actual":"5","display":"Gray"}]}]},{"id":3,"action":"Size","required":false,"placement":"child","instanceId":3,"format":"set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","name":"Size","step":0.1,"random":false,"value":0.5,"default":0.5,"min":0.1,"max":3}]},{"id":4,"action":"Heading","required":false,"placement":"child","instanceId":4,"format":"set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"random\"","default":"\"random\"","values":[{"actual":"\"random\"","display":"Random"},{"actual":"270","display":"Left"},{"actual":"90","display":"Right"},{"actual":"0","display":"Up"},{"actual":"180","display":"Down"}]}]},{"id":5,"action":"Speed","required":false,"placement":"child","instanceId":5,"format":"set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","name":"Speed","step":1,"random":false,"value":24,"default":10,"min":1,"max":50}]}],"action":"Properties","open":"if true ["},{"children":[{"id":6,"action":"Move Forever","required":false,"placement":"child","instanceId":6,"format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true","blockColor":"#b65db0"}],"action":"Actions","open":"if true ["},{"children":[{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":7,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":10,"action":"Wall","required":false,"placement":"child","instanceId":8,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"wall\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":9,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":10,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":11,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":12,"action":"Ball From Same Group","required":false,"placement":"child","instanceId":12,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":13,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":14,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":15,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":14,"action":"Ball From Other Group","required":false,"placement":"child","instanceId":16,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":17,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":18,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]}],"action":"Interactions","open":"if true ["}]}]}]},"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"expressions":[{"name":"true","type":"bool"},{"name":"false","type":"bool"},{"name":"AND","type":"bool","arguments":["bool","bool"],"format":"({0} and {1})"},{"name":"OR","type":"bool","arguments":["bool","bool"],"format":"({0} or {1})"},{"name":"NOT","type":"bool","arguments":["bool"],"format":"(not {0})"},{"name":">","type":"bool","arguments":["num","num"]},{"name":">=","type":"bool","arguments":["num","num"]},{"name":"<","type":"bool","arguments":["num","num"]},{"name":"<=","type":"bool","arguments":["num","num"]},{"name":"!=","type":"bool","arguments":["num","num"]},{"name":"=","type":"bool","arguments":["num","num"]},{"name":"+","type":"num","arguments":["num","num"]},{"name":"-","type":"num","arguments":["num","num"]},{"name":"×","type":"num","arguments":["num","num"],"format":"({0} * {1})"},{"name":"/","type":"num","arguments":["num","num"]},{"name":"random","type":"num","arguments":["num"],"format":"random-float {0}"}]},"netLogoCode":"to configure-population-1\n  #nettango#set-current-population-of-properties-being-set 1\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" (nt:get \"__ntb-defs-0-canvas_8_1_0\")\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-0-canvas_2_2_0\")\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-0-canvas_3_3_0\")\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-0-canvas_4_4_0\")\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-0-canvas_5_5_0\")\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-0-canvas_16_9_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-0-canvas_17_10_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-0-canvas_16_13_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-0-canvas_17_14_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-0-canvas_16_17_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-0-canvas_17_18_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend","netLogoDisplay":"to configure-population-1\n  #nettango#set-current-population-of-properties-being-set 1\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" \"group-1\"\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (65)\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango 0.5\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango \"random\"\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango 24\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend"},{"id":1,"spaceId":"ntb-defs-1","name":"Population 2","width":430,"height":700,"defs":{"version":5,"height":700,"width":430,"blocks":[{"id":1,"action":"Configure Population","required":true,"placement":"starter","format":"to configure-population-2\n  #nettango#set-current-population-of-properties-being-set 2","isTerminal":true,"limit":1,"blockColor":"#09aa14","clauses":[{"children":[],"action":"Properties","open":"if true ["},{"children":[],"action":"Actions","open":"if true ["},{"children":[],"action":"Interactions","open":"if true ["}]},{"id":2,"action":"Color","required":false,"placement":"child","format":"set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","def":"15","name":"Color","quoteValues":"never-quote","default":"15","values":[{"actual":"15","display":"Red"},{"actual":"25","display":"Orange"},{"actual":"35","display":"Brown"},{"actual":"45","display":"Yellow"},{"actual":"55","display":"Green"},{"actual":"65","display":"Lime"},{"actual":"75","display":"Turquoise"},{"actual":"85","display":"Cyan"},{"actual":"95","display":"Sky"},{"actual":"105","display":"Blue"},{"actual":"115","display":"Violet"},{"actual":"125","display":"Magenta"},{"actual":"135","display":"Pink"},{"actual":"9.9","display":"White"},{"actual":"5","display":"Gray"}]}]},{"id":3,"action":"Size","required":false,"placement":"child","format":"set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","def":0.5,"name":"Size","step":0.1,"random":false,"default":0.5,"min":0.1,"max":3}]},{"id":4,"action":"Heading","required":false,"placement":"child","format":"set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","default":"\"random\"","values":[{"actual":"\"random\"","display":"Random"},{"actual":"270","display":"Left"},{"actual":"90","display":"Right"},{"actual":"0","display":"Up"},{"actual":"180","display":"Down"}]}]},{"id":5,"action":"Speed","required":false,"placement":"child","format":"set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","def":10,"name":"Speed","step":1,"random":false,"default":10,"min":1,"max":50}]},{"id":8,"action":"Group","required":false,"placement":"child","format":"set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" {0}","blockColor":"#f9960b","params":[{"id":0,"type":"text","name":"Name"}]},{"id":6,"action":"Move Forever","required":false,"placement":"child","format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true","blockColor":"#b65db0"},{"id":7,"action":"Move X Steps","required":false,"placement":"child","format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#b65db0","params":[{"id":0,"type":"int","name":"Amount of steps","step":1,"default":20}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[],"open":"if true [","close":"]"},{"children":[],"action":"then","open":"if true [","close":"]"}]},{"id":10,"action":"Wall","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"wall\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":19,"action":"Gravity Field","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"gravity-field\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":20,"action":"Electric Field","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"electric-field\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":12,"action":"Ball From Same Group","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":14,"action":"Ball From Other Group","required":false,"placement":"child","format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"","blockColor":"#20a6df","textColor":"#dce199"},{"id":16,"action":"Heading","required":false,"placement":"child","format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","def":"\"collide\"","name":"Heading","quoteValues":"never-quote","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":18,"action":"Field Strength","required":false,"placement":"child","format":"#nettango#set-field {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"int","name":"Strength","step":1,"default":10}]}],"program":{"chains":[{"x":33,"y":136,"blocks":[]},{"x":30,"y":21,"blocks":[{"id":1,"action":"Configure Population","required":true,"placement":"starter","instanceId":0,"format":"to configure-population-2\n  #nettango#set-current-population-of-properties-being-set 2","isTerminal":true,"blockColor":"#09aa14","clauses":[{"children":[{"id":8,"action":"Group","required":false,"placement":"child","instanceId":1,"format":"set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" {0}","blockColor":"#f9960b","params":[{"id":0,"type":"text","name":"Name","value":"group-2"}]},{"id":2,"action":"Color","required":false,"placement":"child","instanceId":2,"format":"set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Color","quoteValues":"never-quote","value":"65","default":"15","values":[{"actual":"15","display":"Red"},{"actual":"25","display":"Orange"},{"actual":"35","display":"Brown"},{"actual":"45","display":"Yellow"},{"actual":"55","display":"Green"},{"actual":"65","display":"Lime"},{"actual":"75","display":"Turquoise"},{"actual":"85","display":"Cyan"},{"actual":"95","display":"Sky"},{"actual":"105","display":"Blue"},{"actual":"115","display":"Violet"},{"actual":"125","display":"Magenta"},{"actual":"135","display":"Pink"},{"actual":"9.9","display":"White"},{"actual":"5","display":"Gray"}]}]},{"id":3,"action":"Size","required":false,"placement":"child","instanceId":3,"format":"set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","name":"Size","step":0.1,"random":false,"value":0.5,"default":0.5,"min":0.1,"max":3}]},{"id":4,"action":"Heading","required":false,"placement":"child","instanceId":4,"format":"set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"random\"","default":"\"random\"","values":[{"actual":"\"random\"","display":"Random"},{"actual":"270","display":"Left"},{"actual":"90","display":"Right"},{"actual":"0","display":"Up"},{"actual":"180","display":"Down"}]}]},{"id":5,"action":"Speed","required":false,"placement":"child","instanceId":5,"format":"set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango {0}","blockColor":"#f9960b","params":[{"id":0,"type":"range","name":"Speed","step":1,"random":false,"value":10,"default":10,"min":1,"max":50}]}],"action":"Properties","open":"if true ["},{"children":[{"id":6,"action":"Move Forever","required":false,"placement":"child","instanceId":6,"format":"set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true","blockColor":"#b65db0"}],"action":"Actions","open":"if true ["},{"children":[{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":7,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":10,"action":"Wall","required":false,"placement":"child","instanceId":8,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"wall\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":9,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":10,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":11,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":12,"action":"Ball From Same Group","required":false,"placement":"child","instanceId":12,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":13,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":14,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]},{"id":9,"action":"If ball meets","required":false,"placement":"child","instanceId":15,"format":"#nettango#setup-if-ball-meets-block","closeClauses":"#nettango#teardown-if-ball-meets-block","blockColor":"#0d86ba","clauses":[{"children":[{"id":14,"action":"Ball From Other Group","required":false,"placement":"child","instanceId":16,"format":"#nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"","blockColor":"#20a6df","textColor":"#dce199"}],"open":"if true [","close":"]"},{"children":[{"id":16,"action":"Heading","required":false,"placement":"child","instanceId":17,"format":"#nettango#set-heading-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Heading","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"turn left\"","display":"Turn left"},{"actual":"\"turn right\"","display":"Turn right"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]},{"id":17,"action":"Speed","required":false,"placement":"child","instanceId":18,"format":"#nettango#set-speed-change {0}","blockColor":"#1786e8","textColor":"#aae59a","params":[{"id":0,"type":"select","name":"Speed","quoteValues":"never-quote","value":"\"collide\"","default":"\"collide\"","values":[{"actual":"\"no change\"","display":"No change"},{"actual":"\"collide\"","display":"Collide"},{"actual":"\"zero\"","display":"Zero"},{"actual":"\"increase\"","display":"Increase"},{"actual":"\"decrease\"","display":"Decrease"},{"actual":"\"repel\"","display":"Repel"},{"actual":"\"attract\"","display":"Attract"},{"actual":"\"repel and attract\"","display":"Repel and attract"}]}]}],"action":"then","open":"if true [","close":"]"}]}],"action":"Interactions","open":"if true ["}]}]}]},"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"expressions":[{"name":"true","type":"bool"},{"name":"false","type":"bool"},{"name":"AND","type":"bool","arguments":["bool","bool"],"format":"({0} and {1})"},{"name":"OR","type":"bool","arguments":["bool","bool"],"format":"({0} or {1})"},{"name":"NOT","type":"bool","arguments":["bool"],"format":"(not {0})"},{"name":">","type":"bool","arguments":["num","num"]},{"name":">=","type":"bool","arguments":["num","num"]},{"name":"<","type":"bool","arguments":["num","num"]},{"name":"<=","type":"bool","arguments":["num","num"]},{"name":"!=","type":"bool","arguments":["num","num"]},{"name":"=","type":"bool","arguments":["num","num"]},{"name":"+","type":"num","arguments":["num","num"]},{"name":"-","type":"num","arguments":["num","num"]},{"name":"×","type":"num","arguments":["num","num"],"format":"({0} * {1})"},{"name":"/","type":"num","arguments":["num","num"]},{"name":"random","type":"num","arguments":["num"],"format":"random-float {0}"}]},"netLogoCode":"to configure-population-2\n  #nettango#set-current-population-of-properties-being-set 2\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" (nt:get \"__ntb-defs-1-canvas_8_1_0\")\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-1-canvas_2_2_0\")\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-1-canvas_3_3_0\")\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-1-canvas_4_4_0\")\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango (nt:get \"__ntb-defs-1-canvas_5_5_0\")\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-1-canvas_16_9_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-1-canvas_17_10_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-1-canvas_16_13_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-1-canvas_17_14_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change (nt:get \"__ntb-defs-1-canvas_16_17_0\")\n    #nettango#set-speed-change (nt:get \"__ntb-defs-1-canvas_17_18_0\")\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend","netLogoDisplay":"to configure-population-2\n  #nettango#set-current-population-of-properties-being-set 2\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" \"group-2\"\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (65)\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango 0.5\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango \"random\"\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango 10\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend"}],"netTangoToggles":{"workspaceBelow":false,"showCode":false},"tabOptions":{"commandCenterTab":true,"codeTab":true,"infoTab":true,"speedBar":false,"fileButtons":true,"authoring":true,"tabsPosition":true,"poweredBy":false},"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"title":"mmm","extraCss":"","code":"extensions [send-to fetch import-a]\n;extensions [send-to fetch import-a profiler]\n\nglobals [\n  tick-count ;; count how many turns this model has executed (\"go\" procedure invoked)\n  current-population-properties-are-being-set-for-in-nettango ;; keeps track of which population we are setting properties for in nettango\n  ball-population-properties ;; list that holds properties for each population. Each index is a different property. Check report procedure \"property-index\"\n  population-to-set-properties-for-in-ui ;; which population is selected in the ball pallet in ui\n  default-colors-for-ball-populations\n  counters-information-gfx-overlay ;; breed that references 2 gfx-overlay turtles that display information for counter\n  ball-count-in-counters ;; list that keeps track of ball count in all counters\n  time-when-brush-buttons-were-first-clicked ;; used for radio buttons for brush. keeps track of what order brush buttons were clicked so the right button is unpressed\n  current-background-color ;; gets updated when user clicks \"paint-world\" button\n  brush-radio-button-counter ;; increased when one of the brush buttons is clicked, used to keep track of which button was pressed last\n  nettango-what-ball-meets-in-if-ball-meets-block ;; used to keep track for which entity (ball meets) the interaction block is defined for\n  wall-collision-count ;; list of wall collisions for each population.\n  log-history ;; keeps track of all log history. need this because netlogo web can not append to a file, so need to write whole log every time\n  log-picture-count ;; keeps track how many pictures logged so far so the file can be named with picture number in ascending order\n\n  gravity-acceleration-x   ;; acceleration of field (gravity, electric)\n  gravity-acceleration-y   ;; acceleration of field (gravity, electric)\n  ;heading-acceleration     ;; direction of field\n  ;avg-speed-init avg-energy-init      ;; initial averages\n  ;avg-speed avg-energy                ;; current averages\n  ;particle-mass\n  tick-advance-amount                 ;; the amount by which we will advance ticks\n  ;temperature\n  ;volume\n  ;pressure\n  ;outside-energy\n  ;lost-balls                     ;; particles that have escaped the pull of gravity (reached the top of the World & View)\n                                      ;; these particles are removed from the simulation\n  ;percent-lost-balls\n  ;max-tick-advance-amount             ;; the largest a tick length is allowed to be\n  maxballs                       ;; possibly omit later, to prevent balls slowing down too much so that it's visible and confuses the students about speed\n  ;total-balls1-number   total-balls2-number\n  ;box-x box-y                ;; patch coords of box's upper right corner\n  ;box-center-x   box-center-y ;;patch coords of box's center\n  ;circle-radius  ;; radius of circle to be drawn\n  ;patch-colors-saved-FLAG  ;; flag to save the colors of the patch\n  ;first-click-FLAG  ;;; for drawing rectange and circles\n  ;obstacles\n  deltaSpeed    ;  value to increase or decrease speed\n  max-speed     ; max allowed speed in system (recursive speed increase may blow up the variable)\n  ;last-mouse-click-xcor\n  ;last-mouse-click-ycor\n  lookAhead  ; distance to check ahead if near wall\n  ;avg-speed-population1 avg-energy-population1\n  ;avg-speed-population2 avg-energy-population2\n  ;world-color\n  ;wall-color\n  field-color\n  field-count ; counts the number of different fields (was \"clusters\")\n  ;field-width\n;  max-field-spread\n;  counter-color\n  counter-width\n  counter-count  ; will hold the number of the counter\n  ;counter-time-window ; number of time units over which to sum balls on counter\n  ;counter-delta-time  ; will count the time units\n;  flash-color    ; color of flash\n  flash-time     ; length of time of flash\n;  starter\n;  fixPrevFieldPatch  ; flag to determine if prev mouse position needs to be added to field\n  eps-collision  ; how deep the intersection of balls can be to be considered collision\n\n  log-filename  ; will hold filename\n  log-filename-photo ; will hold photo file name\n  prev-command-name ; will hold the prev command printedin log file (to avoid double logging)\n  prev-line  ; will hold the last line printedin log file\n  repulsion-strength\n  attraction-strength\n  LJeps   ; Lennard Jones constants\n  LJsigma ; Lennard Jones constants\n\n;======= BRUSH VARIABLES ===========\n  brush-shape                           ;; square or circle\n  brush-type                            ;; what is brush drawing?\n  center-patch-of-drawn-shape           ;; keeps track of patch brush first clicked on when shape was first drawn.\n  patches-affected-by-drawn-shape       ;; patches that would be drawn on if user were to draw shape right now\n  gfx-displaying-patches-affected-by-drawn-shape    ;; turtles that only serve to display boundaries of shape currently being configured\n  mouse-xy-when-brush-was-pressed-down  ;; x,y coordinates when brush was first clicked\n  shape-drawn-by-brush                  ;; circle,rectangle,line,square\n  -brush-border-outline                 ;; gfx turtle displaying which patches will get drawn onby brush\n  -brush-cursor                         ;; gfx turtle displaying brush cursor\n  brush-style                           ;; is brush drawing free-form or a shape\n  brush-type-icon                       ;; icon top right of model displaying what brush is drawing\n  brush-draw-erase-mode-icon            ;; icon top right of model displaying if brush is set to draw, erase, or configuring shape\n  brush-icon-size\n  brush-icon-transparency-normalized\n  brush-in-draw-mode                    ;; true if brush is drawing, false if erasing\n  mouse-down?-when-brush-was-last-activated\n  mousexy-when-brush-was-last-activated\n  current-mousexy\n  current-mouse-down?\n  current-mouse-inside?\n  patches-drawn-on-since-brush-was-held-down    ;; keeps track if you do not want to draw twice on the same patch since brush was pressed down.\n  counter-number-drawn-by-brush                 ;; counter number currently being drawn by brush\n  first-patch-brush-configured-field-on\n  brush-activated-after-model-was-advanced      ;; to know if display should be updated because model isnt running which means display isn't updated in \"go\" procedure\n]\n\n; order of breeds determines layering of turtles. (Later defined is on top)\nbreed [ counter-information-gfx a-counter-information-gfx]\nbreed [ batteries battery ]\nbreed [ counters counter]\nbreed [ flashes flash ]      ;; a gfx breed only used to animate a flash\nbreed [ arrows arrow]\nbreed [ halos halo]\nbreed [ balls ball]\nbreed [ erasers eraser ]\nbreed [gfx-overlay a-gfx-overlay] ;; gfx breed\nbreed [brush-border-outlines brush-border-outline]\nbreed [brush-cursors brush-cursor]\n\ncounter-information-gfx-own [\n  counter-number-gfx-overlay ;; empty turtle that only displays its label as counter number\n  ball-count-gfx-overlay ;; empty turtle that only displays its label as counter ball count\n]\n\nflashes-own [birthday]       ;; flashes only last for a short period and then disappear.\n                             ;; their birthday helps us keep track of when they were created and\n                             ;; when we need to remove them.\nballs-own\n[\n  ;table\n  population-num             ;; Which population the ball belongs to\n;  leader                     ;; for stick togather slider\n  speed mass energy          ;; particle info\n;  wall-hits                  ;; # of wall hits during this clock cycle\n;  momentum-difference        ;; used to calculate pressure from wall hits\n;  momentum-instant           ;; used to calculate pressure\n  last-collision             ;; keeps track of last particle this particle collided with\n;  stuck-on-wall?             ;; pays attention if the balls is stuck to exclude him from movement\n;  turn-amount                         ;; This is used to make all of the nodes in a cluster turn by\n                                      ;; the same number of degrees.  Each leader chooses a random\n                                      ;; amount, then everyone else uses the amount from their leader.\n;  stick-to-wall?\n  on-counter\n  tick-count-move-enabled     ;; tick count when move was enabled to move if in blocks set to \"Move X Steps\"\n;  my-field-x                 ;;  local field working on ball\n;  my-field-y                 ;;  local field working on ball\n]\n\nerasers-own [ pressure? ]    ;; new\n\npatches-own\n[\n  population-field-x  ;;  list of vectors field_x and field_y define the distinct direction and strength of the electric field for each population\n  population-field-y  ;;  list of vectors field_x and field_y define the distinct direction and strength of the electric field for each population\n  field-x             ;;  vector  field_x and field_y define the direction and strength of the electric field within the patch\n  field-y             ;;  vector  field_x and field_y define the direction and strength of the electric field within the patch\n  accum-x             ;;  accumulates vector  field_x for gobal field computation\n  accum-y             ;;  accumulates vector  field_y for gobal field computation\n  accum-w             ;;  accumulates weights  for gobal field computation\n;  hold-color          ;; temporarily holds patch color while painting boxes or circles\n  field-number        ;; holds the component number of the field (was \"cluster\")\n;  cluster             ;; GIGI  - DO WE NEED THIS NOW? holds the label (patch) of the electric component. we need this to ensure balls leaveand return to same component/cluster  ALSO used for counter numbering\n;  cluster-number      ;; holds the label (number) of the electric component. we need this to ensure balls leaveand return to same component/cluster  ALSO used for counter numbering\n ; pcounter            ;; used when patch is a counter\n  isPainted           ;; is true on patches that were drawn with draw-field\n  has-wall            ;; true if patch has wall\n]\n\ncounters-own\n[\n;  counter-head        ;; holds the label of the counter component which will display th ecounts in this counter.\n  counter-number      ;; holds the counter number\n;  ball-count          ;; used when patch is a counter\n]\n\nto initialize-properties-for-first-n-ball-populations [amount]\n  foreach (range 1 (amount + 1)) [population -> initialize-properties-for-ball-population-if-they-have-not-been-set population]\nend\n\nto crt-pop\n  ; for use only in desktop version, since we dont have blocks to define population properties.\n  initialize-properties-for-first-n-ball-populations 2\n  set-property-for-population 1 \"initial-size\" 0.5\n  set-property-for-population 1 \"if-ball-meets-wall-heading\" \"bounce\"\n  set-property-for-population 1 \"if-ball-meets-wall-speed\" \"bounce\"\n  set-property-for-population 1 \"if-ball-meets-ball-heading\" \"collide\" set-property-for-population 1 \"if-ball-meets-ball-speed\" \"collide\"\n  ;set-property-for-population 1 \"if-ball-meets-ball-heading\" \"repel and attract\" set-property-for-population 1 \"if-ball-meets-ball-speed\" \"repel and attract\"\n  ;set-property-for-population 1 \"if-ball-meets-ball-heading\" \"attract\" set-property-for-population 1 \"if-ball-meets-ball-speed\" \"attract\"\n  ;set-property-for-population 1 \"if-ball-meets-ball-heading\" \"repel\" set-property-for-population 1 \"if-ball-meets-ball-speed\" \"repel\"\n  set-property-for-population 1 \"if-ball-meets-ball-other-population-heading\" \"collide\"\n  set-property-for-population 1 \"if-ball-meets-ball-other-population-speed\" \"collide\"\n  set-property-for-population 1 \"gravity\" 0\n  set-property-for-population 1 \"electric-field\" 100\n  set-property-for-population 2 \"if-ball-meets-wall-heading\" \"bounce\"\n  set-property-for-population 2 \"if-ball-meets-wall-speed\" \"bounce\"\n  set-property-for-population 2 \"if-ball-meets-ball-heading\" \"collide\" set-property-for-population 2 \"if-ball-meets-ball-speed\" \"collide\"\n  ;set-property-for-population 2 \"if-ball-meets-ball-heading\" \"repel and attract\" set-property-for-population 2 \"if-ball-meets-ball-speed\" \"repel and attract\"\n  ;set-property-for-population 2 \"if-ball-meets-ball-heading\" \"attract\" set-property-for-population 2 \"if-ball-meets-ball-speed\" \"attract\"\n  ;set-property-for-population 2 \"if-ball-meets-ball-heading\" \"repel\" set-property-for-population 2 \"if-ball-meets-ball-speed\" \"repel\"\n  set-property-for-population 2 \"if-ball-meets-ball-other-population-heading\" \"collide\"\n  set-property-for-population 2 \"if-ball-meets-ball-other-population-speed\" \"collide\"\n  set-property-for-population 2 \"gravity\" 0\n  set-property-for-population 2 \"electric-field\" 0\nend\n\nto set-global-values\n  set tick-count 0\n  ;set ball-population-properties table-make\n  set ball-population-properties []\n  set population-to-set-properties-for-in-ui \"-\"\n  set default-colors-for-ball-populations [red blue lime orange violet yellow cyan pink brown green sky magenta turquoise gray ]\n  set counters-information-gfx-overlay []\n  set first-patch-brush-configured-field-on nobody\n  set ball-count-in-counters []\n  set brush-activated-after-model-was-advanced false\n  set time-when-brush-buttons-were-first-clicked table-make\n  ;set time-when-brush-buttons-were-first-clicked table:make\n  set current-background-color background-color\n  set brush-radio-button-counter 0\n  set log-history \"\"\n  set log-picture-count 0\n  set wall-collision-count [0 0]\n\n  set maxballs 2000\n  set deltaSpeed 0.5;\n  set max-speed 10\n  set lookAhead 0.6\n  ;set world-color black\n  ;set wall-color blue\n  set field-color 87\n  set field-count 0\n  ;set max-field-spread 20 ; spread the field only within a radius  (max world is -26 <->  +26\n  set counter-width 1.25\n  ;set counter-color Gray\n  set counter-count 1.5 ;refactor change back to 0\n;  set counter-time-window 1000\n;  set counter-delta-time 0\n;  set flash-color wall-color + 2\n  set flash-time  15\n  set-default-shape flashes \"square\"\n  set repulsion-strength 100\n  set attraction-strength 30\n  set gravity-acceleration-x 0\n  set gravity-acceleration-y -9.8\n  set eps-collision 0.99\n  set tick-advance-amount 1 / 50   ; MAXIMUM possible value of ball speed. Change this if changed SLIDER in interface\n  setup-logging  \"LOGGING/logFile\"  ; sets the log file name log-filename\n  ;setup-logging  \"logFile\"  ; sets the log file name log-filename\n  set prev-command-name \"None\"\n  set prev-line \"None\"\n  set LJeps 0.5  ; Lennard Jones constants\n;  set LJsigma balls-Size; Lennard Jones constants\n  set-default-shape halos \"thin ring\"\n  ;set patch-colors-saved-FLAG FALSE\n  ;set first-click-FLAG TRUE\n  ask patches [\n    set has-wall false\n    set population-field-x []\n    set population-field-y []\n    ;set population-field-x table:make\n    ;set population-field-y table:make\n    ;set population-field-x table-make\n    ;set population-field-y table-make\n  ]\nend\n\nto update-display-every [seconds]\n  every seconds [display]\nend\n\nto iterate-through-population-number-in-ui-by-ascending-circular-order\n  let -population-numbers population-numbers\n  ifelse is-a-population-selected-in-ui [\n    let index-of-current-populaiton-in-ui position population-to-set-properties-for-in-ui -population-numbers\n    set population-to-set-properties-for-in-ui\n          item ((index-of-current-populaiton-in-ui + 1) mod (length -population-numbers)) -population-numbers ]\n  [\n    set population-to-set-properties-for-in-ui min -population-numbers\n  ]\nend\n\nto-report population-numbers\n  ;report table-all-keys ball-population-properties\n  ;report table:keys ball-population-properties\n  report filter [population -> population-properties-initialized? population] n-values (length ball-population-properties) [i -> i + 1]\nend\n\nto-report any-population-exists\n  report length population-numbers > 0\nend\n\nto select-next-population-in-properties-ui\n  if any-population-exists [\n    iterate-through-population-number-in-ui-by-ascending-circular-order\n    ;update-properties-in-ui-for-current-population\n  ]\nend\n\nto-report highest-population-number\n  report max population-numbers\nend\n\nto-report unused-population-number-higher-than-existing-population-numbers\n  ifelse any-population-exists [\n    report highest-population-number + 1]\n  [\n    report 1\n  ]\nend\n\nto set-new-population-to-set-properties-for-in-ui\n  set population-to-set-properties-for-in-ui unused-population-number-higher-than-existing-population-numbers\nend\n\nto-report default-color-for-population [population-number]\n  let population-colors map [population -> get-ball-population-property population \"initial-color\"] population-numbers\n  let default-colors-not-used-by-any-population filter [default-color -> not member? default-color population-colors] default-colors-for-ball-populations\n  ifelse not empty? default-colors-not-used-by-any-population [\n    report first default-colors-not-used-by-any-population ]\n  [\n    report item (population-number mod length default-colors-not-used-by-any-population) default-colors-not-used-by-any-population\n  ]\nend\n\nto-report is-a-population-selected-in-ui\n  report is-number? population-to-set-properties-for-in-ui\nend\n\nto-report is-first-time-radio-button-is-pressed-down [button]\n  report not table-has-key? time-when-brush-buttons-were-first-clicked button\n  ;report not table:has-key? time-when-brush-buttons-were-first-clicked button\nend\n\nto update-record-of-when-brush-radio-button-was-first-clicked [button]\n  ifelse is-first-time-radio-button-is-pressed-down button [\n    set brush-radio-button-counter brush-radio-button-counter + 1\n    set time-when-brush-buttons-were-first-clicked table-put time-when-brush-buttons-were-first-clicked button brush-radio-button-counter ]\n    ;table:put time-when-brush-buttons-were-first-clicked button brush-radio-button-counter ]\n  [\n    let first-time-button-was-pressed table-get time-when-brush-buttons-were-first-clicked button\n    foreach (filter [key -> (key != button) and (table-get time-when-brush-buttons-were-first-clicked key < first-time-button-was-pressed)] table-all-keys time-when-brush-buttons-were-first-clicked )\n      [key -> set time-when-brush-buttons-were-first-clicked table-remove time-when-brush-buttons-were-first-clicked key]\n    ;let first-time-button-was-pressed table:get time-when-brush-buttons-were-first-clicked button\n    ;foreach (filter [key -> (key != button) and (table:get time-when-brush-buttons-were-first-clicked key < first-time-button-was-pressed)] table:keys time-when-brush-buttons-were-first-clicked )\n    ;  [key -> table:remove time-when-brush-buttons-were-first-clicked key]\n  ]\nend\n\nto-report should-release-brush-radio-button? [button]\n  ;should be called from a procedure ran by a brush button in tht interface, only once per button name\n  unselect-brush-radio-button-if-another-button-was-clicked-more-recently button\n  report not table-has-key? time-when-brush-buttons-were-first-clicked button\n  ;report not table:has-key? time-when-brush-buttons-were-first-clicked button\nend\n\nto unselect-brush-radio-button-if-another-button-was-clicked-more-recently [button]\n  update-record-of-when-brush-radio-button-was-first-clicked button\n  if another-brush-radio-button-was-clicked-more-recently button [\n    deselect-brush-radio-button button ]\nend\n\nto-report another-brush-radio-button-was-clicked-more-recently [button]\n  let first-time-button-was-pressed table-get time-when-brush-buttons-were-first-clicked button\n  let buttons-pressed-more-recently filter [key -> (key != button) and (table-get time-when-brush-buttons-were-first-clicked key > first-time-button-was-pressed)]\n    (table-all-keys time-when-brush-buttons-were-first-clicked)\n  ;let first-time-button-was-pressed table:get time-when-brush-buttons-were-first-clicked button\n  ;let buttons-pressed-more-recently filter [key -> (key != button) and (table:get time-when-brush-buttons-were-first-clicked key > first-time-button-was-pressed)]\n  ;  (table:keys time-when-brush-buttons-were-first-clicked)\n  report not empty? buttons-pressed-more-recently\nend\n\nto deselect-brush-radio-button [button]\n  set time-when-brush-buttons-were-first-clicked table-remove time-when-brush-buttons-were-first-clicked button\n  ;table:remove time-when-brush-buttons-were-first-clicked button\nend\n\n;==============================================================\n; these procedures implement a hash map that replaces the extension \"table\" temporarily because a bug in netlogo web\n; makes it unusable.\n; 23/9/2020 Update: NetTango devops team updated that bug was fixed and should soon be pushed to production server.\n; When that happens these functions can be erased and instead use the table extension. The code using this extension is\n; already implemented but commented out. After erasing these functions, simply keep compiling the model and it will\n; jump to lines of code that use these functions. Above them is the equivilent line of code that only uses the table extension,\n; so uncomment them and erase the lines of code using these procedures below.\n\nto-report table-make\n  report []\nend\n\nto-report table-from-list [-list]\n  report -list\nend\n\nto-report table-has-key? [-table key]\n  report key-index -table key != false\nend\n\nto-report table-put [-table key value]\n  let -key-index key-index -table key\n  let key-already-exists -key-index != false\n  ifelse key-already-exists [\n    report replace-item -key-index -table (list key value)\n  ] [\n    report lput (list key value) -table\n  ]\nend\n\nto-report table-get [-table key]\n  report item 1 (item (key-index -table key) -table)\nend\n\nto-report table-remove [-table key]\n  let key-exists key-index -table key != false\n  ifelse key-exists [\n    report remove-item (key-index -table key) -table ]\n  [\n    report -table\n  ]\nend\n\nto-report key-index [-table key]\n  let index false\n  let i 0\n  while [i < length -table] [\n    if (item 0 (item i -table)) = key [\n      set index i\n      set i length -table ;exit while loop\n    ]\n    set i i + 1\n  ]\n  report index\nend\n\nto-report table-all-keys [-table]\n  report map [key-value-pair -> item 0 key-value-pair] -table\nend\n\n;======================== end of alternative \"table\" extension procedures ======\n\nto #nettango#set-current-population-of-properties-being-set [population]\n  ;maybe change name to set-population-that-properties-are-being-set-for-in-nettango\n  set current-population-properties-are-being-set-for-in-nettango population\n  initialize-properties-for-ball-population-if-they-have-not-been-set population\nend\n\nto-report population-properties-initialized? [population]\n  ;report length (item (population - 1) ball-population-properties) > 0\n  report ifelse-value population > length ball-population-properties [false] [length (item (population - 1) ball-population-properties) > 0]\nend\n\nto initialize-properties-for-ball-population-if-they-have-not-been-set [population]\n  ;if not table-has-key? ball-population-properties population [\n\n  ;if not table:has-key? ball-population-properties population [\n  ;  initialize-ball-population-properties population\n  ;]\n\n  if not population-properties-initialized? population [\n     initialize-ball-population-properties population\n  ]\nend\n\nto initialize-ball-population-properties [population]\n  if population > length ball-population-properties [\n    foreach (range length ball-population-properties population 1) [\n      index -> set ball-population-properties insert-item index ball-population-properties []\n        ask patches [\n          set population-field-x insert-item index population-field-x 0\n          set population-field-y insert-item index population-field-y 0\n        ]\n    ]\n  ]\n  let population-color default-color-for-population population\n  ;set ball-population-properties table-put ball-population-properties population initialized-population-properties\n  ;table:put ball-population-properties population initialized-population-properties\n  set ball-population-properties replace-item (population - 1) ball-population-properties initialized-population-properties2\n  set-initial-color-for-population population population-color\nend\n\nto-report initialized-population-properties2\n  report (list\n    0.5\n    \"random\"\n    10\n    gray\n    true\n    \"no change\"\n    \"no change\"\n    \"no change\"\n    \"no change\"\n    \"no change\"\n    \"no change\"\n    0\n    0)\nend\n\n;to-report initialized-population-properties\n;  ;report table-from-list [\n;  report table:from-list [\n;    [\"initial-size\" 0.5]\n;    [\"initial-heading\" \"random\"]\n;    [\"initial-speed\" 10]\n;    [\"initial-color\" gray]\n;    [\"move-forward\" true]\n;    [\"if-ball-meets-wall-heading\" \"no change\"]\n;    [\"if-ball-meets-wall-speed\" \"no change\"]\n;    [\"if-ball-meets-ball-heading\" \"no change\"]\n;    [\"if-ball-meets-ball-speed\" \"no change\"]\n;    [\"if-ball-meets-ball-other-population-heading\" \"no change\"]\n;    [\"if-ball-meets-ball-other-population-speed\" \"no change\"]\n;    [\"gravity\" 0]\n;    [\"electric-field\" 0]\n;  ]\n;end\n\nto-report amount-of-balls-that-can-be-created-given-maximum-capacity [requested-amount]\n  let maximum-amount-of-balls-that-can-currently-be-created (maxballs - count balls)\n  report ifelse-value requested-amount > maximum-amount-of-balls-that-can-currently-be-created [maximum-amount-of-balls-that-can-currently-be-created] [requested-amount]\nend\n\nto notify-user-unable-to-create-balls-due-to-maximum-capacity\n  user-message (word \"Unable to create more balls, maximum capacity of \" maxballs \" reached.\")\nend\n\nto create-balls-if-under-maximum-capacity [population amount -xcor -ycor]\n  let amount-of-balls-to-create amount-of-balls-that-can-be-created-given-maximum-capacity amount\n  let unable-to-create-balls-due-to-maximum-capacity ifelse-value (amount-of-balls-to-create = 0) and (amount > 0) [true] [false]\n  ifelse unable-to-create-balls-due-to-maximum-capacity [\n    notify-user-unable-to-create-balls-due-to-maximum-capacity]\n  [\n    create-balls-at population amount-of-balls-to-create -xcor -ycor\n  ]\nend\n\nto create-balls-at [population amount -xcor -ycor]\n  create-balls amount [\n    set population-num population\n    set shape  \"circle\"\n    set color initial-color\n    set size initial-size\n    set tick-count-move-enabled tick-count\n    set speed initial-speed\n    set mass initial-size\n   ; set heading 1000    ;; temp value to change below so that only THESE new balls will get new value\n    ;set leader self\n    set last-collision nobody\n    ;set stuck-on-wall? false\n    ;set wall-hits 0\n    ;set momentum-difference 0\n    setxy -xcor -ycor\n    ;; if we're only placing -one particle, use the exact position\n    ifelse amount > 1 [ jump random-float 3 ] [jump random-float 0.01]\n    initialize-ball-heading\n]\n  if (prev-command-name != \"place-balls\") [\n         log-output \"place-balls\"\n  ]\nend\n\n; ball procedure\nto initialize-ball-heading\n  ifelse initial-heading = \"random\" [\n    set heading random-float 360 ]\n  [\n    set heading [initial-heading] of self\n  ]\nend\n\nto-report get-ball-population-property [population property]\n  ;report table-get (get-ball-population-properties population) property\n  ;report table:get (get-ball-population-properties population) property\n  ( ifelse\n    property = \"initial-size\" [report item 0 (item (population - 1) ball-population-properties)]\n    property = \"initial-heading\" [report item 1 (item (population - 1) ball-population-properties)]\n    property = \"initial-speed\" [report item 2 (item (population - 1) ball-population-properties)]\n    property = \"initial-color\" [report item 3 (item (population - 1) ball-population-properties)]\n    property = \"move-forward\" [report item 4 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-wall-heading\" [report item 5 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-wall-speed\" [report item 6 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-ball-heading\" [report item 7 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-ball-speed\" [report item 8 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-ball-other-population-heading\" [report item 9 (item (population - 1) ball-population-properties)]\n    property = \"if-ball-meets-ball-other-population-speed\" [report item 10 (item (population - 1) ball-population-properties)]\n    property = \"gravity\" [report item 11 (item (population - 1) ball-population-properties)]\n    property = \"electric-field\" [report item 12 (item (population - 1) ball-population-properties)]\n  )\nend\n\nto-report population-repels-or-attracts-other-populations? [population]\n  let interaction item 9 (item (population - 1) ball-population-properties)\n  report interaction = \"repel\" or interaction = \"attract\" or interaction = \"repel and attract\"\nend\n\n;========== getters and setters for ball properties ========\n\n;ball procedure\nto-report get-ball-property [property]\n  report get-ball-population-property population-num property\nend\n\n; ball procedure\nto-report initial-heading\n  ;report get-ball-property \"initial-heading\"\n  report item 1 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report initial-speed\n  ;report get-ball-property \"initial-speed\"\n  report item 2 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report initial-color\n  ;report get-ball-property \"initial-color\"\n  report item 3 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report initial-size\n  ;report get-ball-property \"initial-size\"\n  report item 0 (item (population-num - 1) ball-population-properties)\nend\n\n;ball procedure\nto-report move-forward\n  ;report get-ball-property \"move-forward\"\n  report item 4 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report wall-collision-heading-change\n  ;report get-ball-property \"if-ball-meets-wall-heading\"\n  report item 5 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report wall-collision-speed-change\n  ;report get-ball-property \"if-ball-meets-wall-speed\"\n  report item 6 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report ball-collision-heading-change\n  ;report get-ball-property \"if-ball-meets-ball-heading\"\n  report item 7 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report ball-collision-speed-change\n  ;report get-ball-property \"if-ball-meets-ball-speed\"\n  report item 8 (item (population-num - 1) ball-population-properties)\nend\n\n; ball procedure\nto-report is-affected-by-gravity\n  ;report get-ball-property \"gravity\" > 0\n  report ball-gravity-acceleration != 0\nend\n\n;ball procedure\nto-report ball-collision-different-populations-heading-change\n  ;report global-ball-collide-heading\n  ;report get-ball-property \"if-ball-meets-ball-other-population-heading\"\n  report item 9 (item (population-num - 1) ball-population-properties)\nend\n\n;ball procedure\nto-report ball-collision-different-populations-speed-change\n  ;report global-ball-collide-speed\n  ;report get-ball-property \"if-ball-meets-ball-other-population-speed\"\n  report item 10 (item (population-num - 1) ball-population-properties)\nend\n\n;ball procedure\nto-report ball-gravity-acceleration\n  ;report get-ball-property \"gravity\"\n  report item 11 (item (population-num - 1) ball-population-properties)\nend\n\n;ball procedure\nto-report ball-electric-field\n  ;report get-ball-property \"electric-field\"\n  report item 12 (item (population-num - 1) ball-population-properties)\nend\n\nto #nettango#setup-if-ball-meets-block\nend\nto #nettango#teardown-if-ball-meets-block\nend\n\nto #nettango#set-if-ball-meets-block-what-ball-meets [what-ball-meets]\n  set nettango-what-ball-meets-in-if-ball-meets-block what-ball-meets\nend\n\nto-report what-ball-meets-in-nettango-block\n  report nettango-what-ball-meets-in-if-ball-meets-block\nend\n\nto #nettango#set-heading-change [heading-change]\n  let what-ball-meets what-ball-meets-in-nettango-block\n  let population current-population-properties-are-being-set-for-in-nettango\n  (ifelse\n    what-ball-meets = \"wall\" [\n      set heading-change ifelse-value heading-change = \"collide\" [\"bounce\"] [heading-change]\n      set-if-ball-meets-wall-heading-for-population population heading-change ]\n    what-ball-meets = \"ball-same-population\" [\n      set-if-ball-meets-ball-heading-for-population population heading-change ]\n    what-ball-meets = \"ball-other-population\" [\n        set-if-ball-meets-ball-other-population-heading-for-population population heading-change] )\nend\n\nto #nettango#set-speed-change [speed-change]\n  let what-ball-meets what-ball-meets-in-nettango-block\n  let population current-population-properties-are-being-set-for-in-nettango\n  ifelse what-ball-meets = \"wall\" [\n    set speed-change ifelse-value speed-change = \"collide\" [\"bounce\"] [speed-change]\n    set-if-ball-meets-wall-speed-for-population population speed-change\n  ]\n  [\n    ifelse what-ball-meets = \"ball-same-population\" [\n      set-if-ball-meets-ball-speed-for-population population speed-change\n    ]\n    [\n      if what-ball-meets = \"ball-other-population\" [\n        set-if-ball-meets-ball-other-population-speed-for-population population speed-change\n      ]\n    ]\n  ]\nend\n\nto #nettango#set-field [strength]\n  let population current-population-properties-are-being-set-for-in-nettango\n  (ifelse\n    what-ball-meets-in-nettango-block = \"gravity-field\" [set-gravity-property-for-population population strength]\n    what-ball-meets-in-nettango-block = \"electric-field\" [set-property-for-population population \"electric-field\" strength]\n  )\nend\n\nto-report get-ball-population-properties [population]\n  ;report table-get ball-population-properties population\n  ;report table:get ball-population-properties population\n  report item (population - 1) ball-population-properties\nend\n\nto set-property-for-population [population property value]\n  ;table:put (get-ball-population-properties population) property value\n\n  ;set ball-population-properties table-put ball-population-properties  population\n  ;      (table-put (get-ball-population-properties population) property value)\n\n  set ball-population-properties replace-item (population - 1) ball-population-properties (replace-item (property-index property) (item (population - 1) ball-population-properties) value)\nend\n\nto-report property-index [property]\n  let index 0\n  (ifelse\n    property = \"initial-size\" [set index 0]\n    property = \"initial-heading\" [set index 1]\n    property = \"initial-speed\" [set index 2]\n    property = \"initial-color\" [set index 3]\n    property = \"move-forward\" [set index 4]\n    property = \"if-ball-meets-wall-heading\" [set index 5]\n    property = \"if-ball-meets-wall-speed\" [set index 6]\n    property = \"if-ball-meets-ball-heading\" [set index 7]\n    property = \"if-ball-meets-ball-speed\" [set index 8]\n    property = \"if-ball-meets-ball-other-population-heading\" [set index 9]\n    property = \"if-ball-meets-ball-other-population-speed\" [set index 10]\n    property = \"gravity\" [set index 11]\n    property = \"electric-field\" [set index 12]\n  )\n  report index\nend\n\nto set-initial-speed-for-population [population -speed]\n  set-property-for-population population \"initial-speed\" -speed\nend\n\nto set-initial-size-for-population [population -size]\n  set-property-for-population population \"initial-size\" -size\nend\n\nto set-initial-color-for-population [population -color]\n  set-property-for-population population \"initial-color\" -color\nend\n\nto set-initial-heading-for-population [population -heading]\n  set-property-for-population population \"initial-heading\" -heading\nend\n\nto set-if-ball-meets-wall-heading-for-population [population -heading]\n  set-property-for-population population \"if-ball-meets-wall-heading\" -heading\nend\n\nto set-if-ball-meets-wall-speed-for-population [population -speed]\n  set-property-for-population population \"if-ball-meets-wall-speed\" -speed\nend\n\nto set-if-ball-meets-ball-heading-for-population [population -heading]\n  set-property-for-population population \"if-ball-meets-ball-heading\" -heading\nend\n\nto set-if-ball-meets-ball-speed-for-population [population -speed]\n  set-property-for-population population \"if-ball-meets-ball-speed\" -speed\nend\n\nto set-ball-forward-property-for-population [population -move-forward]\n  set-property-for-population population \"move-forward\" -move-forward\nend\n\nto set-if-ball-meets-ball-other-population-heading-for-population [population -heading]\n  set-property-for-population population \"if-ball-meets-ball-other-population-heading\" -heading\nend\n\nto set-if-ball-meets-ball-other-population-speed-for-population [population -speed]\n  set-property-for-population population \"if-ball-meets-ball-other-population-speed\" -speed\nend\n\nto set-gravity-property-for-population [population strength]\n  set-property-for-population population \"gravity\" strength\nend\n\nto set-electric-field-property-for-population [population strength]\n  if strength != get-ball-population-property population \"electric-field\" [\n    set-property-for-population population \"electric-field\" strength\n    recalculate-field-values-for-population population\n  ]\nend\n\nto #nettango#if-ball-meets-wall [-heading -speed]\n  let population current-population-properties-are-being-set-for-in-nettango\n  set-if-ball-meets-wall-heading-for-population population -heading\n  set-if-ball-meets-wall-speed-for-population population -speed\nend\n\nto #nettango#if-ball-meets-ball [-heading -speed]\n  let population current-population-properties-are-being-set-for-in-nettango\n  set-if-ball-meets-ball-heading-for-population population -heading\n  set-if-ball-meets-ball-speed-for-population population -speed\nend\n\nto #nettango#move-ball\n  let population current-population-properties-are-being-set-for-in-nettango\n  let -move-forward true\n  set-ball-forward-property-for-population population -move-forward\nend\n\nto #nettango#if-ball-meets-electric-field [is-population-affected-by-electric-field]\n  let population current-population-properties-are-being-set-for-in-nettango\n  set-electric-field-property-for-population population is-population-affected-by-electric-field\nend\n\nto #nettango#if-ball-meets-gravity [is-population-affected-by-gravity]\n  let population current-population-properties-are-being-set-for-in-nettango\n  set-gravity-property-for-population population is-population-affected-by-gravity\nend\n\nto paint-arrow [this-patch]\n  if ((((round pxcor) mod 2) = 0) and (((round pycor) mod 2) = 0)) [\n    sprout-arrows 1\n    [\n      set shape \"arrow\"\n      set color field-color - 4\n      set size 1.0\n      set heading atan field-x field-y\n     ]\n  ]\nend\n\nto fill-field\n  let current-patch []  ; will hold a patch that is being processed\n\n  let list-patches  sort patches with [field-number = field-count  ]   ; list of patches that were marked\n  ; fill patches in connected componnent with field-color\n  while [not empty? list-patches]\n  [ set current-patch first list-patches\n    set list-patches but-first list-patches\n    ask current-patch\n    ;refactor changed \"in-radius-nowrap\" to \"in-radius\"\n    ;[    ask patches in-radius-nowrap 1 with [ pcolor != wall-color  and pcolor != field-color ]\n    [    ask patches in-radius 1 with [(not has-wall) and (not has-field)]\n         [  set pcolor field-color\n            set field-number field-count\n            set list-patches lput self list-patches  ;add to list-patches  ; Another way set frontier2 (patch-set frontier2 patch-here)\n         ] ; end ask neighbors\n    ] ; end ask current-patch\n  ] ; end field while\n\n  ; now spread the field vectors in all the painted field cells WITHIN connected comp ONLY\n  let list-field-patches []\n  let marked-patch []  ;first list-field-marked-patches\n  let dist 0\n\n  let list-field-marked-patches  patches with [isPainted = TRUE]  ; list of patches that were marked as field by user\n  ask  list-field-marked-patches\n  [   set marked-patch self\n      set list-field-patches  patches with [ field-number = field-count] ; all patches that were colored within same connected comp\n      ask list-field-patches\n      [\n        set dist sqrt ((pxcor - [pxcor] of  marked-patch) ^ 2 + (pycor - [pycor] of  marked-patch) ^ 2 )\n;        if dist < max-field-spread  ; spread the field only within a radius\n        if (dist = 0) [ set dist (1 / (max-pxcor * 2))]   ; weight is 1/dist and so dist should not be 0\n        set accum-w accum-w + (1 / dist)\n        set accum-x  accum-x +  ((1 / dist) * [field-x] of marked-patch)\n        set accum-y  accum-y +  ((1 / dist) * [field-y] of marked-patch)\n;       ] ; end if dist < max-field-spread\n    ]\n  ]\n\n  ; now compute the final field values of all field patches\n  ask list-field-patches\n  [  if (accum-w != 0)\n     [   set field-x  (accum-x / accum-w)\n         set field-y  (accum-y / accum-w)\n         ; normalize and set to field strength\n         ;set field-x    (field-x / (sqrt ((field-x ^ 2) + (field-y ^ 2)))) * Electric-Field-Strength\n         ;set field-y    (field-y / (sqrt ((field-x ^ 2) + (field-y ^ 2)))) * Electric-Field-Strength\n         set field-x    (field-x / (sqrt ((field-x ^ 2) + (field-y ^ 2))))\n         set field-y    (field-y / (sqrt ((field-x ^ 2) + (field-y ^ 2))))\n      ]\n  ]\n\n  foreach population-numbers [population -> recalculate-field-values-for-population population]\n\nif (prev-command-name != \"fill-field\") [\n         log-output \"fill-field\"\n    ]\nend\n\nto recalculate-field-values-for-population [population]\n  ask patches\n  [\n    set population-field-x replace-item (population - 1) population-field-x (field-x * get-ball-population-property population \"electric-field\")\n    set population-field-y replace-item (population - 1) population-field-y (field-y * get-ball-population-property population \"electric-field\")\n    ;table:put population-field-x population (field-x * get-ball-population-property population \"electric-field\")\n    ;table:put population-field-y population (field-y * get-ball-population-property population \"electric-field\")\n    ;set population-field-x table-put population-field-x population (field-x * get-ball-population-property population \"electric-field\")\n    ;set population-field-y table-put population-field-y population (field-y * get-ball-population-property population \"electric-field\")\n  ]\nend\n\n;;if population > length ball-population-properties [foreach (range length ball-population-properties population 1) [index -> set ball-population-properties insert-item index ball-population-properties [] ]]\nto erase-field [-field-number]\n  ask patches with [field-number = -field-number]\n  [\n    ask arrows-here [die]\n    set field-number 0\n    set isPainted FALSE\n    set field-x  0\n    set field-y  0\n    set accum-x  0\n    set accum-y  0\n    set accum-w  0\n    set population-field-x n-values length population-numbers [0]\n    set population-field-y n-values length population-numbers [0]\n    ;foreach population-numbers [population -> table:put population-field-x population 0 table:put population-field-y population 0]\n    ;foreach population-numbers [population -> set population-field-x table-put population-field-x population 0 set population-field-y table-put population-field-y population 0]\n    recolor-patch\n  ]\n  set field-count max [field-number] of patches\nend\n\nto-report has-field\n  report field-number > 0\nend\n\nto recolor-patch\n  (ifelse\n    has-wall [set pcolor wall-color ]\n    has-field [set pcolor field-color ]\n    [set pcolor current-background-color] )\nend\n\nto paint-world\n    set current-background-color background-color\n    paint-patches\n    if (prev-command-name != \"paint-world\") [\n          log-output \"paint-world\"]\nend\n\nto paint-patches\n  ask patches [recolor-patch]\nend\n\nto advance-balls-in-world\n  ask balls [\n    ; if nextpatch == wall then call perform-hit-wall\n    ; if in same patch as other ball - call  perform-meet-ball\n    ; Then move\n    factor-field ; add change of speed and heading due to electric field\n    factor-field-interaction\n    factor-gravity;\n    check-for-wall ;  changes speed and heading when ball meets wall\n    check-for-collision  ; changes speed and heading when 2 balls meet\n\n    ; now move one step with updated heading and speed.\n  ]  ; end of askballs\n  ask balls [\n    move\n    recolor\n  ]\nend\n\nto remove-flashes-past-their-lifespan\n  ask flashes with [ticks - birthday > flash-time * tick-advance-amount] [die]\nend\n\nto-report any-moving-balls?\n  let any-ball-moving false\n  ask balls [if is-ball-moving? [set any-ball-moving true stop]]\n  report any-ball-moving;\nend\n\nto update-display\n  if tick-count mod 2 = 0 [display]\nend\n\nto advance-ticks\n  tick-advance tick-advance-amount\n  set tick-count tick-count + 1\nend\n\nto log-go-procedure\n  if (test-if-log-output \"play\" = TRUE) [  ; test that prev logging is not exactly the same\n    log-output \"play\"\n    log_picture\n  ]\nend\n\nto re-enable-movement-for-balls-predefined-to-move-limited-number-of-ticks\n  ask balls with [is-number? move-forward] [set tick-count-move-enabled tick-count]\nend\n\nto update-ball-populaiton-properties-defined-in-nettango-blocks\n  ; in order to apply changes to blocks, every turn the population properties are initialized\n  ; and reset. The reason is that if a block is removed, then the option for that property must\n  ; be set to default, which is done by initializing all population properties and reapplying\n  ; properties of remaining blocks.\n\n  let pop1-electric-field get-ball-population-property 1 \"electric-field\"\n  let pop2-electric-field get-ball-population-property 2 \"electric-field\"\n  initialize-ball-population-properties 1\n  initialize-ball-population-properties 2\n  configure-population-1\n  configure-population-2\n  if pop1-electric-field != get-ball-population-property 1 \"electric-field\" [recalculate-field-values-for-population 1]\n  if pop2-electric-field != get-ball-population-property 2 \"electric-field\" [recalculate-field-values-for-population 2]\nend\n\n;to time-run\n;  if tick-count = 0 [profiler:reset profiler:start]\n;  if tick-count = 500 [print profiler:report profiler:reset]\n;end\n\nto go\n  ;time-run\n  log-go-procedure\n  update-ball-populaiton-properties-defined-in-nettango-blocks\n  ifelse any-moving-balls? [\n    every (tick-advance-amount) [\n      ;update-electricity\n      advance-balls-in-world\n      remove-flashes-past-their-lifespan\n      advance-ticks\n      update-display\n    ]\n  ][\n    stop  ;; unselect \"play\" button\n    re-enable-movement-for-balls-predefined-to-move-limited-number-of-ticks\n  ]\n  set brush-activated-after-model-was-advanced false\nend\n\nto color-population-by-speed [population]\n  ;refactor this procedure very slow, n^2 complexity\n  let lower-limit 0\n  let upper-limit 0\n\n  let values [speed] of balls with [population-num = population]\n  if (length values > 1)\n  [  set lower-limit mean values - 3 * standard-deviation values\n     set upper-limit mean values + 3 * standard-deviation values\n     ask balls with [population-num = 1]\n     [   set color scale-color color speed (lower-limit - 1) (upper-limit + 1)\n     ]\n  ]\nend\n\nto recolor  ;; particle procedure\n  ifelse Color-Speed [\n    foreach population-numbers [population -> color-population-by-speed population] ]\n  [\n    set color [initial-color] of self\n  ]\nend\n\n; ball procedure\nto-report is-ball-moving?\n  let -move-forward move-forward\n  report ifelse-value is-boolean? -move-forward [-move-forward] [tick-count - tick-count-move-enabled < -move-forward]\nend\n\n; turtle procedure\nto flash-counter-here\n  if [has-counter] of patch-here [\n    ask patch-here [flash-patch black] ]\nend\n\n; patch procedure\nto-report has-flash\n  report any? flashes-here\nend\n\n; patch procedure\nto create-flash-here [-flash-color]\n  sprout-flashes 1 [\n    set color -flash-color\n    set birthday ticks\n  ]\nend\n\n; patch procedure\nto flash-patch [-flash-color]\n  ifelse has-flash [\n    renew-lifespan-of-flash-here ]\n  [\n    create-flash-here -flash-color\n  ]\nend\n\n; patch procedure\nto renew-lifespan-of-flash-here\n  ask one-of flashes-here [set birthday ticks]\nend\n\nto set-ball-xy-to-return-cyclically-around-world\n  set xcor (((xcor + max-pxcor) mod (2 * max-pxcor)) - max-pxcor)\n  set ycor (((ycor + max-pycor) mod (2 * max-pycor)) - max-pycor)\nend\n\nto-report is-ball-being-traced\n  report pen-mode = \"down\"\nend\n\nto return-ball-cyclically-around-world\n  ifelse is-ball-being-traced [\n    pen-up\n    set-ball-xy-to-return-cyclically-around-world\n    pen-down ]\n  [\n    set-ball-xy-to-return-cyclically-around-world\n  ]\nend\n\nto move ;; particle procedure\n\n  if is-ball-moving?\n  [\n    ; if ball on counter  - create a flash\n    ;  counters-report   ; changed to count flashes and not balls on counters bcs too many ticks balls are on counter\n    if (counter-count > 0)\n    [  ifelse (any? counters-here) and (on-counter = False) [  ; if there is a counter at the pos of the ball (we are inside ask balls in go) and ball was not counted yet\n        set on-counter True\n        increase-counter counter-number-here\n        flash-counter-here\n      ]\n      [ set on-counter False\n      ]\n    ] ; end if count-counters > 0\n\n\n    ; look at th epatch the ball will be moving to:\n      let pahead patch-ahead (speed * tick-advance-amount)\n      ifelse (pahead = nobody)\n      [ ; when ball leaves world - instead of die:\n        ; if it is inside a efield then choose random location on an edge patch of that field and move ball to that new location.\n        ; ensure that ball returns to same field-number\n        ; if it is not inside an efield then it returns cyclically.\n        ifelse field-count > 0  ; there is a field in the world\n        [   let patches-on-edge patches with [(field-number = [field-number] of myself) and (pxcor = max-pxcor  or pxcor = min-pxcor  or pycor = max-pycor  or pycor = min-pycor) ]\n            ifelse  (any? patches-on-edge)  ; there is atleast 1 patch marked at edge of world\n            [ let  new-patch one-of patches-on-edge   ;\n              set xcor  [pxcor] of new-patch\n              set ycor  [pycor] of new-patch\n              if (([field-x] of new-patch != 0) or ([field-y] of new-patch != 0))\n               [ set heading atan [field-x] of new-patch  [field-y] of new-patch\n               ]\n               ; otherwise continue in same direction as exited window\n            ]\n            [ ; else there are no patches of field on edge of world, ball returns cyclic\n                return-ball-cyclically-around-world\n            ]\n         ] ; end if field-count > 0\n         [  ; else - there is no efield balls return cyclic\n           return-ball-cyclically-around-world\n         ]\n      ]\n      ; ball did not leave the world - move it and deal with collision with other ball:\n      [   if pahead != patch-here\n                 [ set last-collision nobody ]\n          jump (speed * tick-advance-amount)\n      ]\n  ]\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;bounce;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto   check-for-wall ;  if next to wall patch, change speed and heading of ball\n;output-print \"in check for wall\"\n;output-type (round heading)\n;output-show (shade-of? blue [pcolor] of new-patch)\n;clear-output\n\n let new-patch patch-ahead lookAhead ;  GIGI was look atnext patch but changed to look where ACTUALLY will be\n;let new-patch patch-ahead (speed * tick-advance-amount)\nlet headingM  heading mod 360   ; ensure heading is 0..360\n\n  if new-patch = nobody [stop]\n;  if ( ([pxcor] of new-patch = max-pxcor ) or ([pxcor] of new-patch = min-pxcor ) or ([pycor] of new-patch = max-pycor ) or ([pycor] of new-patch = min-pycor ))  [stop]\nif (headingM >= 0) and (headingM < 90)   ; Quadrant I check only right and up walls\n[     let new-patch-right  patch-at-heading-and-distance  90 lookAhead\n      let new-patch-up    patch-at-heading-and-distance    0 lookAhead\n      if (new-patch-right = nobody) [set new-patch-right patch-here]  ; if at edge of world\n      if (new-patch-up = nobody) [set new-patch-up patch-here]  ; if at edge of world\n\n    if (([has-wall] of new-patch-right) and ([has-wall] of new-patch-up) ) [perform-hit-wall \"corner\" [pxcor] of new-patch-right [pycor] of new-patch-right stop]\n      if ([has-wall] of new-patch-right)   [perform-hit-wall \"right\" [pxcor] of new-patch-right [pycor] of new-patch-right stop]\n      if ([has-wall] of new-patch-up)     [perform-hit-wall \"up\" [pxcor] of new-patch-up [pycor] of new-patch-up stop]\n      if ([has-wall] of new-patch)        [perform-hit-wall \"corner\" [pxcor] of new-patch [pycor] of new-patch stop]\n]\n\nif (headingM >= 90) and (headingM < 180)   ; Quadrant II check only right and down walls\n[     let new-patch-right  patch-at-heading-and-distance   90 lookAhead\n      let new-patch-down  patch-at-heading-and-distance  180 lookAhead\n      if (new-patch-right = nobody) [set new-patch-right patch-here]  ; if at edge of world\n      if (new-patch-down = nobody) [set new-patch-down patch-here]  ; if at edge of world\n\n      if (([has-wall] of new-patch-right) and ([has-wall] of new-patch-down))  [perform-hit-wall \"corner\" [pxcor] of new-patch-right [pycor] of new-patch-right stop]\n      if ([has-wall] of new-patch-right)   [perform-hit-wall \"right\" [pxcor] of new-patch-right [pycor] of new-patch-right stop]\n      if ([has-wall] of new-patch-down)   [perform-hit-wall \"down\" [pxcor] of new-patch-down [pycor] of new-patch-down stop]\n      if ([has-wall] of new-patch)        [perform-hit-wall \"corner\" [pxcor] of new-patch [pycor] of new-patch stop]\n]\n\nif (headingM >= 180) and (headingM < 270)   ; Quadrant III check only left and down walls\n[     let new-patch-left  patch-at-heading-and-distance  -90 lookAhead\n      let new-patch-down  patch-at-heading-and-distance  180 lookAhead\n      if (new-patch-left = nobody) [set new-patch-left patch-here]  ; if at edge of world\n      if (new-patch-down = nobody) [set new-patch-down patch-here]  ; if at edge of world\n\n      if (([has-wall] of new-patch-left) and ([has-wall] of new-patch-down))  [perform-hit-wall \"corner\" [pxcor] of new-patch-left [pycor] of new-patch-left stop]\n      if ([has-wall] of new-patch-left)   [perform-hit-wall \"left\" [pxcor] of new-patch-left [pycor] of new-patch-left stop]\n      if ([has-wall] of new-patch-down)   [perform-hit-wall \"down\" [pxcor] of new-patch-down [pycor] of new-patch-down stop]\n      if ([has-wall] of new-patch)        [perform-hit-wall \"corner\" [pxcor] of new-patch [pycor] of new-patch stop]\n]\n\nif (headingM >= 270) and (headingM < 360)   ; Quadrant IV check only left and up walls\n[     let new-patch-left  patch-at-heading-and-distance  -90 lookAhead\n      let new-patch-up    patch-at-heading-and-distance    0 lookAhead\n      if (new-patch-left = nobody) [set new-patch-left patch-here]  ; if at edge of world\n      if (new-patch-up = nobody) [set new-patch-up patch-here]  ; if at edge of world\n\n      if (([has-wall] of new-patch-left) and ([has-wall] of new-patch-up)) [perform-hit-wall \"corner\" [pxcor] of new-patch-left [pycor] of new-patch-left stop]\n      if ([has-wall] of new-patch-left)   [perform-hit-wall \"left\" [pxcor] of new-patch-left [pycor] of new-patch-left stop]\n      if ([has-wall] of new-patch-up)     [perform-hit-wall \"up\" [pxcor] of new-patch-up [pycor] of new-patch-up stop]\n      if ([has-wall] of new-patch)        [perform-hit-wall \"corner\" [pxcor] of new-patch [pycor] of new-patch stop]\n]\nend\n\n;ball procedure\nto change-heading-after-wall-collision [wall-direction xpos ypos]\n  if (wall-collision-heading-change = \"no change\")[]\n  if (wall-collision-heading-change = \"turn left\")[  set heading (heading - 90 ) ]\n  if (wall-collision-heading-change = \"turn right\")[ set heading (heading + 90 )  ]\n  if (wall-collision-heading-change = \"bounce\")[ bounce wall-direction  xpos ypos]  ; change heading (speed remains the same)\nend\n\nto change-speed-after-wall-collision\n  if (wall-collision-speed-change = \"zero\")     [ set speed 0 ]\n  if (wall-collision-speed-change = \"increase\")[set speed speed + deltaSpeed]\n  if (wall-collision-speed-change = \"decrease\")[set speed speed - deltaSpeed]\n  if (wall-collision-speed-change = \"bounce\") and (wall-collision-heading-change != \"bounce\")\n                     [user-message (word \"You cannot pair non-bounce heading change with bounce speed change.\")]\nend\n\nto set-ball-speed-to-maximum-if-above-max-speed\n  ; make sure speed does not exceed limit\n  if (speed > max-speed) [set speed max-speed]\nend\n\n; patch procedure\nto flash-wall-here\n  if has-wall [\n    flash-patch pcolor + 2 ]\nend\n\nto flash-wall-at [-xcor -ycor]\n  if flash-wall-collision [\n    ask patch -xcor -ycor [flash-wall-here] ]\nend\n\nto increase-wall-collision-count-for-ball-population\n  let index (population-num - 1)\n  set wall-collision-count replace-item index wall-collision-count (item index wall-collision-count + 1)\nend\n\nto perform-hit-wall [wall-direction xpos ypos]\n  increase-wall-collision-count-for-ball-population\n  flash-wall-at xpos ypos\n  change-heading-after-wall-collision wall-direction xpos ypos\n  change-speed-after-wall-collision\n  set-ball-speed-to-maximum-if-above-max-speed\nend\n\nto bounce [direction xpos ypos]\n;  sets new heading of ball when hits wall\n;  direction is the direction of the wall from ball \"left\" \"right\" \"up\" \"down\" \"corner\"\n; xpos ypox is the coordinate of the wall patch. Needed for flashing\n;output-show \"in bounce\"\n\n  if ((direction = \"right\") or (direction = \"left\")) [set heading (-1 * heading)]  ; hit a horizontal wall\n  if ((direction = \"up\")    or (direction = \"down\")) [set heading (180 - heading)] ; hit vertical wall\n  if (direction = \"corner\")                          [set heading (180 + heading)] ; hit wall at a corner\n  set last-collision nobody\nend\n\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;collision;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n to check-for-collision  ;; check if 2 balls collide. If so Change speed and heading of the 2 balls\n\n  ;; Here we impose a rule that collisions only take place when there\n  ;; are exactly two balls per patch.  We do this because when the\n  ;; student introduces new balls from the side, we want them to\n  ;; form a uniform wavefront.\n  ;;\n  ;; Why do we want a uniform wavefront?  Because it is actually more\n  ;; realistic.  (And also because the curriculum uses the uniform\n  ;; wavefront to help teach the relationship between ball collisions,\n  ;; wall hits, and pressure.)\n  ;;\n  ;; Why is it realistic to assume a uniform wavefront?  Because in reality,\n  ;; whether a collision takes place would depend on the actual headings\n  ;; of the balls, not merely on their proximity.  Since the balls\n  ;; in the wavefront have identical speeds and near-identical headings,\n  ;; in reality they would not collide.  So even though the two-balls\n  ;; rule is not itself realistic, it produces a realistic result.  Also,\n  ;; unless the number of balls is extremely large, it is very rare\n  ;; for three or more balls to land on the same patch (for example,\n  ;; with 400 balls it happens less than 1% of the time).  So imposing\n  ;; this additional rule should have only a negligible effect on the\n  ;; aggregate behavior of the system.\n  ;;\n  ;; Why does this rule produce a uniform wavefront?  The balls all\n  ;; start out on the same patch, which means that without the only-two\n  ;; rule, they would all start colliding with each other immediately,\n  ;; resulting in much random variation of speeds and headings.  With\n  ;; the only-two rule, they are prevented from colliding with each other\n  ;; until they have spread out a lot.  (And in fact, if you observe\n  ;; the wavefront closely, you will see that it is not completely smooth,\n  ;; because some collisions eventually do start occurring when it thins out while fanning.)\n  let candidate 0\n  let ourDistance 0\n  let mySize  size\n  let mySpeed speed\n  let interBallMaxDist 0\n;\n  ; Collision occurs if there is a ball in the same patch at the borders of the balls  (GIGI at this point assume a ball can collide with only 1 ball)\n    ;; the following conditions are imposed on collision candidates:\n    ;;   1. they must have a lower who number than my own, because collision\n    ;;      code is asymmetrical: it must always happen from the point of view\n    ;;      of just one ball.\n    ;;   2. they must not be the same ball that we last collided with on\n    ;;      this patch, so that we have a chance to leave the patch after we've\n    ;;      collided with someone.\n  ;ask other balls\n  ;ask other balls-here\n  let -length abs ((round (xcor - (size / 2))) - (round (xcor + (size / 2) ))) + 1\n  let top-left-xcor (round (xcor - (size / 2)))\n  let top-left-ycor (round (ycor + (size / 2)))\n  let my-who who\n  ;ask (turtle-set n-values (-length ^ 2) [i -> [balls-here with [who < my-who]] of patch (top-left-xcor + i mod -length) (top-left-ycor - int(i / -length))])\n  ask (turtle-set n-values (-length ^ 2) [i ->\n  ifelse-value abs (top-left-xcor + i mod -length) < max-pxcor and abs (top-left-ycor - int(i / -length)) < max-pycor\n                 [[balls-here with [who < my-who]] of patch (top-left-xcor + i mod -length) (top-left-ycor - int(i / -length))] [nobody]])\n  ; other ball == candidate in older code\n  [ set interBallMaxDist  ((size + mySize) / 2)\n    set ourDistance  distance myself\n    if (ourDistance <= interBallMaxDist  and ourDistance >= interBallMaxDist - eps-collision)    ; collision!!\n       [ if (who < [who] of myself) and (myself != last-collision)  ; perform the collision if other ball number is smaller than me.\n         [\n            if TRUE ;(speed > 0 or mySpeed > 0)   ; at least one ball is moving\n              [\n                set candidate self   ; set candidate variabe as self so as to call perform-collision function\n                ask myself [perform-collision candidate]\n                set last-collision myself\n                ask myself [set last-collision  candidate]\n              ]\n          ]\n\n    ]\n  ]\nend\n\nto-report balls-belong-to-same-population [ball1 ball2]\n  report [population-num] of ball1 = [population-num] of ball2\nend\n\n;ball procedure\nto perform-collision-with-ball-belonging-to-same-population [other-ball]\n  perform-collision-heading-change-with-ball-belonging-to-same-population other-ball\n  perform-collision-speed-change-with-ball-belonging-to-same-population other-ball\n  set-ball-speed-to-maximum-if-above-max-speed\n  ask other-ball [set-ball-speed-to-maximum-if-above-max-speed]\nend\n\n;ball procedure\nto perform-collision-with-ball-belonging-to-different-population [other-ball]\n  perform-collision-heading-change-with-ball-belonging-to-different-population other-ball\n  perform-collision-speed-change-with-ball-belonging-to-different-population other-ball\n  set-ball-speed-to-maximum-if-above-max-speed\n  ask other-ball [set-ball-speed-to-maximum-if-above-max-speed]\nend\n\n;ball procedure\nto perform-collision-heading-change-with-ball-belonging-to-same-population [other-ball]\n  (ifelse\n    (ball-collision-heading-change = \"no change\")[]\n    (ball-collision-heading-change = \"turn left\")[  set heading (heading - 90) ask other-ball [set heading (heading - 90)]]\n    (ball-collision-heading-change = \"turn right\")[ set heading (heading + 90 ) ask other-ball [set heading (heading + 90)]]\n    ((ball-collision-heading-change = \"collide\") and (ball-collision-speed-change = \"collide\")) [collide-with other-ball ]   ; changes heading and speed of BOTH  balls\n    ((ball-collision-heading-change = \"attract\") and (ball-collision-speed-change = \"attract\")) [collide-with other-ball ]   ; changes heading and speed of BOTH  balls\n  )\nend\n\n;ball procedure\nto perform-collision-speed-change-with-ball-belonging-to-same-population [other-ball]\n  (ifelse\n    (ball-collision-speed-change = \"zero\")    [set speed 0 ask other-ball [set speed 0]]\n    (ball-collision-speed-change = \"increase\")[set speed speed + deltaSpeed ask other-ball [set speed speed + deltaSpeed]]\n    (ball-collision-speed-change = \"decrease\")[set speed speed - deltaSpeed ask other-ball [set speed speed - deltaSpeed]]\n    ((ball-collision-speed-change = \"collide\") and (ball-collision-heading-change != \"collide\")) or ((ball-collision-speed-change != \"collide\") and (ball-collision-heading-change = \"collide\"))\n                      [user-message (word \"You cannot pair non-collision heading change with collision speed change.\")]\n    ((ball-collision-speed-change = \"attract\") and (ball-collision-heading-change != \"attract\")) or ((ball-collision-speed-change != \"attract\") and (ball-collision-heading-change = \"attract\"))\n                      [user-message (word \"You cannot pair non-attraction heading change with attraction speed change.\")]\n  )\nend\n\n;ball procedure\nto perform-collision-heading-change-with-ball-belonging-to-different-population [other-ball]\n  (ifelse\n    (ball-collision-different-populations-heading-change = \"no change\")[]\n    (ball-collision-different-populations-heading-change = \"turn left\")[ set heading (heading - 90) ask other-ball [set heading (heading - 90)]]\n    (ball-collision-different-populations-heading-change = \"turn right\")[ set heading (heading + 90 ) ask other-ball [set heading (heading + 90)]]\n    ((ball-collision-different-populations-heading-change = \"collide\") and (ball-collision-different-populations-speed-change = \"collide\")) [collide-with other-ball ]   ; changes heading and speed of BOTH  balls\n    ((ball-collision-different-populations-heading-change = \"attract\") and (ball-collision-different-populations-speed-change = \"attract\")) [ collide-with other-ball ]   ; changes heading and speed of BOTH  balls\n  )\nend\n\n;ball procedure\nto perform-collision-speed-change-with-ball-belonging-to-different-population [other-ball]\n  (ifelse\n    (ball-collision-different-populations-speed-change = \"zero\")     [ set speed 0 ask other-ball[set speed 0]]\n    (ball-collision-different-populations-speed-change = \"increase\")[set speed speed + deltaSpeed ask other-ball[set speed speed + deltaSpeed]]\n    (ball-collision-different-populations-speed-change = \"decrease\")[set speed speed - deltaSpeed ask other-ball[set speed speed - deltaSpeed]]\n    ((ball-collision-different-populations-speed-change = \"collide\") and (ball-collision-different-populations-heading-change != \"collide\")) or\n            ((ball-collision-different-populations-speed-change != \"collide\") and (ball-collision-different-populations-heading-change = \"collide\"))\n            [user-message (word \"You cannot pair non-collision heading change with collision speed change.\")]\n    ((ball-collision-different-populations-speed-change = \"attract\") and (ball-collision-different-populations-heading-change != \"attract\")) or\n            ((ball-collision-different-populations-speed-change != \"attract\") and (ball-collision-different-populations-heading-change = \"attract\"))\n            [user-message (word \"You cannot pair non-attraction heading change with attraction speed change.\")]\n  )\nend\n\n;ball procedure\nto perform-collision [other-ball]\n;  when self and candidate balls meet will change the heading and speed of both balls\n  ifelse balls-belong-to-same-population self other-ball [\n    perform-collision-with-ball-belonging-to-same-population other-ball ]\n  [\n    perform-collision-with-ball-belonging-to-different-population other-ball\n  ]\nend\n\nto collide-with [ other-ball ] ;;\n;; implements a collision with another ball.\n;;\n;; THIS IS THE HEART OF THE PARTICLE SIMULATION, AND YOU ARE STRONGLY ADVISED\n;; NOT TO CHANGE IT UNLESS YOU REALLY UNDERSTAND WHAT YOU'RE DOING!\n;;\n;; The two balls colliding are self and other-ball, and while the\n;; collision is performed from the point of view of self, both balls are\n;; modified to reflect its effects. This is somewhat complicated, so I'll\n;; give a general outline here:\n;;   1. Do initial setup, and determine the heading between ball centers\n;;      (call it theta).\n;;   2. Convert the representation of the velocity of each ball from\n;;      speed/heading to a theta-based vector whose first component is the\n;;      ball's speed along theta, and whose second component is the speed\n;;      perpendicular to theta.\n;;   3. Modify the velocity vectors to reflect the effects of the collision.\n;;      This involves:\n;;        a. computing the velocity of the center of mass of the whole system\n;;           along direction theta\n;;        b. updating the along-theta components of the two velocity vectors.\n;;   4. Convert from the theta-based vector representation of velocity back to\n;;      the usual speed/heading representation for each ball.\n;;   5. Perform final cleanup and update derived quantities.\n\n  let mass2 0\n  let speed2 0\n  let heading2 0\n  let theta 0\n  let v1t 0\n  let v1l 0\n  let v2t 0\n  let v2l 0\n  let vcm 0\n\n;output-print \"me in collide with\"\n;  output-print population-num\n;  output-print speed\n;  output-print heading\n;\n;  output-print \"other ball\"\n; output-print  [population-num] of other-ball\n;  output-print [speed] of other-ball\n; output-print [heading] of other-ball\n\n\n  ;; Step 0 - If one of the populations shouldnt move (==ballsX-forward == FALSE) the other ball should bounce bck (heading = -heading)\n  ;; Actually we enter here with myself is moving. Cant be that my balls-forward is FALSE\n  ;refactor\n  let this-ball-is-moving is-ball-moving?\n  let other-ball-is-moving [is-ball-moving?] of other-ball\n  let both-balls-are-moving ifelse-value this-ball-is-moving and other-ball-is-moving [true] [false]\n\n  if not this-ball-is-moving [\n    ask other-ball [ set heading heading + 180  ] ; heading is reflected but speed remains the same and my speed+heading doesnt change (but is irrelevt anyway)\n  ]\n\n  if not other-ball-is-moving [\n    set heading  heading + 180  ; heading is reflected but speed remains the same and my speed+heading doesnt change (but is irrelevt anyway)\n  ]\n\n  if both-balls-are-moving\n  [\n\n  ;;; PHASE 1: initial setup\n\n  ;; for convenience, grab some quantities from other-ball\n  set mass2 [mass] of other-ball\n  set speed2 [speed] of other-ball\n  set heading2 [heading] of other-ball\n\n  ;; since balls are modeled as zero-size points, theta isn't meaningfully\n  ;; defined. we can assign it randomly without affecting the model's outcome.\n  set theta (random-float 360)\n\n\n\n  ;;; PHASE 2: convert velocities to theta-based vector representation\n\n  ;; now convert my velocity from speed/heading representation to components\n  ;; along theta and perpendicular to theta\n  set v1t (speed * cos (theta - heading))\n  set v1l (speed * sin (theta - heading))\n\n  ;; do the same for other-ball\n  set v2t (speed2 * cos (theta - heading2))\n  set v2l (speed2 * sin (theta - heading2))\n\n\n\n  ;;; PHASE 3: manipulate vectors to implement collision\n\n  ;; compute the velocity of the system's center of mass along theta\n  set vcm (((mass * v1t) + (mass2 * v2t)) / (mass + mass2) )\n\n  ;; now compute the new velocity for each ball along direction theta.\n  ;; velocity perpendicular to theta is unaffected by a collision along theta,\n  ;; so the next two lines actually implement the collision itself, in the\n  ;; sense that the effects of the collision are exactly the following changes\n  ;; in ball velocity.\n  set v1t (2 * vcm - v1t)\n  set v2t (2 * vcm - v2t)\n\n;  output-print \"me after\"\n;  output-print population-num\n;  output-print speed\n;  output-print heading\n;\n;  output-print \"other ball after \"\n; output-print  [population-num] of other-ball\n;  output-print [speed] of other-ball\n; output-print [heading] of other-ball\n\n  ;;; PHASE 4: convert back to normal speed/heading\n\n  ;; now convert my velocity vector into my new speed and heading\n  set speed sqrt ((v1t * v1t) + (v1l * v1l))\n  ;; if the magnitude of the velocity vector is 0, atan is undefined. but\n  ;; speed will be 0, so heading is irrelevant anyway. therefore, in that\n  ;; case we'll just leave it unmodified.\n   ; make sure speed does not exceed limit\n   if (speed > max-speed) [set speed max-speed]\n   if v1l != 0 or v1t != 0\n    [ set heading (theta - (atan v1l v1t)) ]\n\n  ;; and do the same for other-ball\n  ask other-ball [\n    set speed sqrt ((v2t ^ 2) + (v2l ^ 2))\n    ; make sure speed does not exceed limit\n    if (speed > max-speed) [set speed max-speed]\n    if v2l != 0 or v2t != 0\n      [ set heading (theta - (atan v2l v2t)) ]\n  ]\n\n  ]\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GRAVITY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto update-electricity   ;; updates the per patch gravity field vector by adding the fields for each ball\n  let ball-pos-x 0\n  let ball-pos-y 0\n  let dist 0\n  let max-electric-strength 10  ;; this needs to become a global variable set from a button in the interface\n  let patch-list []\n  set patch-list patches\n\n  ;; first null the electric field\n  ask patches [\n     set field-x  0\n     set field-y  0\n  ]\n\n  ask balls\n  [\n      ask patch-list [\n;  [ foreach patch in-radius 10000 [\n    set field-x  field-x + 1\n;    ]\n  ]\n  ]\n;   ;; per ball update the electric field in each patch\n ask balls [\n    set ball-pos-x xcor\n    set ball-pos-y ycor\n\n    ask patch-list [\n      set dist  sqrt max ( list ((pxcor - ball-pos-x) ^ 2 + (pycor - ball-pos-y) ^ 2)  1)   ; dist holds distance to patch but does not alllow 0\n;output-print  dist\n\n      set field-x  (field-x +   (pxcor - ball-pos-x) / (dist ^ 3)  * max-electric-strength)\n      set field-y  (field-y +   (pycor - ball-pos-y) / (dist ^ 3)  * max-electric-strength)\n  ]\n\n  ]\nend\n\nto-report is-ball-affected-by-repel-or-attract-forces\n  let own-population-interaction ball-collision-heading-change\n  ; affected by my own population?\n  if own-population-interaction = \"repel\" or own-population-interaction = \"attract\" or own-population-interaction = \"repel and attract\" [report true]\n  ; affected by other population?\n  foreach (remove-item (population-num - 1) population-numbers) [population -> if population-repels-or-attracts-other-populations? population [report true]]\n  report false\nend\n\nto factor-field-interaction  ;; turtle procedure consider the electric field\n  if is-ball-affected-by-repel-or-attract-forces [\n    let my-field-x 0 ; null my field data\n    let my-field-y 0 ; null my field data\n\n    let  mypos-x xcor\n    let  mypos-y ycor\n    let dist 0  ; will be used to calculate distance between balls\n    let force 0 ; will hold the LJ force between 2 balls\n\n    ask other balls\n    [ ifelse balls-belong-to-same-population myself self [\n      if ((ball-collision-heading-change = \"repel\") and (ball-collision-speed-change = \"repel\")) [ ; add repulsion factor to my field\n        set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n        set my-field-x  (my-field-x -   (xcor - mypos-x) / (dist ^ 3)  * repulsion-strength)\n        set my-field-y  (my-field-y -   (ycor - mypos-y) / (dist ^ 3)  * repulsion-strength)\n      ]\n      if ((ball-collision-heading-change = \"attract\") and (ball-collision-speed-change = \"attract\")) [ ; add attraction factor to my field\n        set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n        set my-field-x  (my-field-x  +   (xcor - mypos-x) / (dist ^ 3)  * attraction-strength)\n        set my-field-y  (my-field-y  +   (ycor - mypos-y) / (dist ^ 3)  * attraction-strength)\n      ]\n      if ((ball-collision-heading-change = \"repel and attract\") and (ball-collision-speed-change = \"repel and attract\")) [ ; add leonard-Jones factor to my field\n        set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n        set LJsigma size  ; set this LJ param to be size of ball\n        set force ((24 * LJeps / LJsigma ^ 2 * ( 2 * (LJsigma / (dist )) ^ 14 - (LJsigma / (dist)) ^ 8 ) ))  ;LJ formula from Eilon's code\n                                                                                                             ;output-print (word \"force = \" force  \" dist = \"  dist )\n        set my-field-x  (my-field-x    - force *  (xcor - mypos-x) / (dist))     ; (xcor - mypos-x) / (dist)  is sin(theta)\n        set my-field-y  (my-field-y    - force *  (ycor - mypos-y) / (dist))     ; (ycor - mypos-y) / (dist)  is cos(theta)\n      ]\n      ]\n\n      [(ifelse\n        ((ball-collision-different-populations-heading-change = \"repel\") and (ball-collision-different-populations-speed-change = \"repel\")) [ ; add repulsion factor to my field\n          set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n          set my-field-x  (my-field-x -   (xcor - mypos-x) / (dist ^ 3)  * repulsion-strength)\n          set my-field-y  (my-field-y -   (ycor - mypos-y) / (dist ^ 3)  * repulsion-strength)\n        ]\n        ((ball-collision-different-populations-heading-change = \"attract\") and (ball-collision-different-populations-speed-change = \"attract\")) [ ; add attraction factor to my field\n          set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n          set my-field-x  (my-field-x  +   (xcor - mypos-x) / (dist ^ 3)  * attraction-strength)\n          set my-field-y  (my-field-y  +   (ycor - mypos-y) / (dist ^ 3)  * attraction-strength)\n\n        ]\n        ((ball-collision-different-populations-heading-change = \"repel and attract\") and (ball-collision-different-populations-speed-change = \"repel and attract\")) [ ; add leonard-Jones factor to my field\n          set dist  sqrt max ( list ((xcor - mypos-x) ^ 2 + (ycor - mypos-y) ^ 2) 1)  ; dist holds distance to patch but does not alllow 0\n          set LJsigma size  ; set this LJ param to be size of ball\n          set force ((24 * LJeps / LJsigma ^ 2 * ( 2 * (LJsigma / (dist )) ^ 14 - (LJsigma / (dist)) ^ 8 ) ))  ;LJ formula from Eilon's code\n          set my-field-x  (my-field-x    - force * (xcor - mypos-x) / (dist))     ; (xcor - mypos-x) / (dist)  is sin(theta)\n          set my-field-y  (my-field-y    - force * (ycor - mypos-y) / (dist))     ; (ycor - mypos-y) / (dist)  is cos(theta)\n        ]\n\n      )]\n\n\n    ]\n\n    let vx (sin heading * speed) + (my-field-x * tick-advance-amount)\n    let vy (cos heading * speed) + (my-field-y * tick-advance-amount)\n    set speed sqrt ((vy ^ 2) + (vx ^ 2))\n    ; if (speed > max-speed) [set speed max-speed]\n    if ((vx != 0) or (vy != 0))  [set heading atan vx vy]\n  ]\nend\n\nto factor-field  ;; turtle procedure consider the electric field\n                 ;output-print \"inside FACTOR FIELD\"\n                 ;output-print (word \"field of patch \" [field-x] of patch-here \" \" [field-y] of patch-here)\n                 ;output-print (word \" patch xy : \" [pxcor] of patch-here  [pycor] of patch-here)\n  if field-count > 0 [\n    let ball-population-number population-num\n    let vx ((sin heading) * speed) + ([item (ball-population-number - 1) population-field-x] of patch-here  * tick-advance-amount)\n    let vy ((cos heading) * speed) + ([item (ball-population-number - 1) population-field-y] of patch-here  * tick-advance-amount)\n    ;let vx ((sin heading) * speed) + ([table:get population-field-x ball-population-number] of patch-here  * tick-advance-amount)\n    ;let vy ((cos heading) * speed) + ([table:get population-field-y ball-population-number] of patch-here  * tick-advance-amount)\n    ;let vx ((sin heading) * speed) + ([table-get population-field-x ball-population-number] of patch-here  * tick-advance-amount)\n    ;let vy ((cos heading) * speed) + ([table-get population-field-y ball-population-number] of patch-here  * tick-advance-amount)\n    set speed sqrt ((vy ^ 2) + (vx ^ 2))\n    ;set-ball-speed-to-maximum-if-above-max-speed\n    if ((vx != 0) or (vy != 0))  [set heading atan vx vy]\n  ]\nend\n\nto factor-gravity  ;; turtle procedure\n  if (not is-affected-by-gravity) [stop]  ; no gravity field - return\n\n  if speed = 0 [stop]  ; GIGI - why? if speed is 0 then should increase by gravity...\n  let vx (sin heading * speed) + (gravity-acceleration-x * tick-advance-amount)\n  ;let vy (cos heading * speed) + (gravity-acceleration-y * tick-advance-amount)\n  let vy (cos heading * speed) + ((- ball-gravity-acceleration) * tick-advance-amount)\n  set speed sqrt ((vy ^ 2) + (vx ^ 2))\n  set-ball-speed-to-maximum-if-above-max-speed\n  set heading atan vx vy\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;STICK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;to stick\n;  set stick-to-wall? true\n;        set leader self\n;  if has-wall [set stuck-on-wall? true]\n;\n;end\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;earser;;;;;;;;;;;;;;;\n\nto start-new-task   ; called from START NEW TASK button\n  clear-all\n  set-global-values\n  initialize-properties-for-first-n-ball-populations 2\n  update-ball-populaiton-properties-defined-in-nettango-blocks\n  ;crt-pop\n  select-next-population-in-properties-ui\n  setup-brush\n  paint-patches\n  reset-ticks\nend;\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n; LOGGING\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto-report delimit [-left delimiter -right]\n  report (word -left delimiter -right)\nend\n\nto-report delimit-comma [-left -right]\n  report delimit -left \",\" -right\nend\n\nto-report delimit-hashtag [-left -right]\n  report delimit -left \",#,\" -right\nend\n\nto-report delimited-population-settings [population -settings]\n  report reduce delimit-comma map [property -> get-ball-population-property population property] -settings\nend\n\nto-report delimited-all-populations-settings [-settings]\n  report reduce delimit-hashtag map [population -> delimited-population-settings population -settings] population-numbers\nend\n\nto-report delimited-all-populations-numerous-settings [settings-list]\n  report reduce delimit-hashtag map [settings -> delimited-all-populations-settings settings] settings-list\nend\n\nto-report populations-settings-delimited-string\n  let properties [\"initial-size\" \"initial-color\" \"initial-speed\" \"initial-heading\"]\n  let actions [\"move-forward\"]\n  let interactions [\"if-ball-meets-wall-heading\" \"if-ball-meets-wall-speed\" \"if-ball-meets-ball-heading\" \"if-ball-meets-ball-speed\"\n        \"if-ball-meets-ball-other-population-heading\" \"if-ball-meets-ball-other-population-speed\" \"gravity\" \"electric-field\"]\n  report delimited-all-populations-numerous-settings (list properties actions interactions)\nend\n\nto-report population-count [population]\n  report count balls with [population-num = population]\nend\n\nto-report amount-of-balls-being-traced\n  report count balls with [pen-mode = \"down\"]\nend\n\nto-report delimited-population-count\n  report reduce delimit-comma map population-count population-numbers\nend\n\nto-report delimited-log-string\n  report (word populations-settings-delimited-string \",\" amount-of-balls-being-traced \",\" delimited-population-count \",\" current-background-color)\nend\n\nto-report log-header\n   report (word \" Date = \"  date-and-time \" , Command Name, ticks, ball1-Properties,  balls1-Size,balls1-color,balls1-init-speed,balls1-init-heading,\"\n                \" balls2-Properties , balls2-Size,balls2-color,balls2-init-speed,balls2-init-heading,\"\n                \"balls1-Actions , balls1-forward , balls2-Actions , balls2-forward,\"\n                \" balls1-Interactions, if-hit-wall-heading1,if-hit-wall-speed1,if-meet-ball-heading1,if-meet-ball-speed1\"\n                \", balls2-Interactions,if-hit-wall-heading2,if-hit-wall-speed2,if-meet-ball-heading2,if-meet-ball-speed2 , \"\n                \" balls1&balls2-Interactions ,if-meet-ball-heading ,if-meet-ball-speed , , trace-a-ball? ,num-balls1 , num-balls2 , background-color, Electric-Field-Strength,\"\n                \" Gravity-field \" )\nend\n\nto set-new-log-filename [fileName]\n  let timestamp date-and-time\n  let timestamp-no-colon replace-item 2 timestamp \"-\"\n  set timestamp-no-colon replace-item 5 timestamp-no-colon \"-\"\n  set log-filename (word fileName \"_\" substring timestamp-no-colon 16 27 \"_\" substring timestamp-no-colon 0 8 \".csv\")\nend\n\nto setup-logging  [fileName]\n  set-new-log-filename fileName\n  if log-enabled [\n    set log-history log-header\n    send-to:file log-filename log-history\n  ]\nend\n\nto set-new-log-photo-filename\n  set log-filename-photo (word substring log-filename 0 (length log-filename - 4) \"_\" log-picture-count \".png\")\nend\n\nto log_picture\n  if log-enabled [\n    set-new-log-photo-filename\n    export-view log-filename-photo\n  ]\nend\n\nto-report test-if-log-output [command-name]\n  ifelse log-enabled [\n    let new-line (word command-name  \",#,\" delimited-log-string)\n    ifelse (new-line = prev-line) [report FALSE] [report TRUE]\n  ] [report false]\nend\n\nto add-log-history [new-log]\n set log-history word log-history new-log\nend\n\nto log-output [command-name]\n  if log-enabled [\n    add-log-history (word timer \",\" command-name \",\" ticks \",#,\" delimited-log-string)\n    send-to:file log-filename log-history\n  set prev-command-name command-name\n  set prev-line (word command-name  \",#,\"  delimited-log-string)\n  ]\nend\n\n\nto make-halo  ;; runner procedure\n  ;; when you use HATCH, the new turtle inherits the\n  ;; characteristics of the parent.  so the halo will\n  ;; be the same color as the turtle it encircles (unless\n  ;; you add code to change it\n  hatch-halos 1\n  [ set size 5\n    ;; Use an RGB color to make halo three fourths transparent\n    set color lput 64 extract-rgb color\n    ;; set thickness of halo to half a patch\n    ;__set-line-thickness 0.5 ;refactor nlw doesnt support this\n    ;; We create an invisible directed link from the runner\n    ;; to the halo.  Using tie means that whenever the\n    ;; runner moves, the halo moves with it.\n    create-link-from myself\n    [ tie\n      hide-link ] ]\n  if (prev-command-name != \"make-halo\") [\n    log-output \"make-halo\"]\n\nend\n\nto save-existing-layout\n  let file-name user-input \"איזה שם לתת לקובץ?\"\n  export-world (word file-name)\n  if (prev-command-name != \"save-existing-layout\") [log-output \"save-existing-layout\"]\nend\n\nto load-existing-layout\n  fetch:user-file-async [text ->\n    if not (text = false) [\n      carefully [\n        import-a:world text\n      ] [\n        user-message \"אין אפשרות לטעון את הקובץ\"\n      ]\n    ]\n  ]\n  if (prev-command-name != \"load-existing-layout\") [log-output \"load-existing-layout\"]\nend\n\n;patch procedure\nto-report patch-has-wall\n  report has-wall\nend\n\n;patch procedure\nto-report patch-has-balls\n  report count balls-here > 0\nend\n\n;patch procedure\nto-report can-attempt-to-create-wall-in-patch\n  report not patch-has-wall\nend\n\n; patch procedure\nto try-to-push-aside-balls-from-patch\n  ask balls-here [try-to-move-to-closest-unblocked-neighbors4-patch]\nend\n\n;turtle procedure\nto try-to-move-to-closest-unblocked-neighbors4-patch\n  let closest-unblocked-neighbor-patch closest-unblocked-neighbors4-patch self\n  let unblocked-neighbor-exists closest-unblocked-neighbor-patch != nobody\n  if unblocked-neighbor-exists [\n    move-to closest-unblocked-neighbor-patch\n    forward random-float 0.01\n  ]\nend\n\nto-report closest-unblocked-neighbors4-patch [-turtle]\n  let patch-turtle-is-on [patch-here] of -turtle\n  report min-one-of unblocked-neighbor4-patches patch-turtle-is-on [distance patch-turtle-is-on]\nend\n\nto-report unblocked-neighbor4-patches [-patch]\n  report ([neighbors4] of -patch) with [not patch-has-wall]\nend\n\nto-report can-create-wall-in-patch\n  report (not patch-has-wall) and (not patch-has-balls)\nend\n\n;patch procedure\nto create-wall-in-patch\n  if can-attempt-to-create-wall-in-patch [\n    try-to-push-aside-balls-from-patch\n    if can-create-wall-in-patch [\n      set has-wall true\n      set pcolor wall-color\n    ]\n  ]\nend\n\n; patch procedure\nto remove-wall-in-patch\n  if patch-has-wall [\n    set has-wall false\n    set pcolor background-color\n  ]\nend\n\nto erase-all-balls-of-population-selected-in-ui\n  if is-a-population-selected-in-ui [ask balls with [population-num = population-to-set-properties-for-in-ui] [remove-ball]]\nend\n\n;======== BRUSH ===========================\n\nto setup-brush\n  set mouse-down?-when-brush-was-last-activated false\n  set mousexy-when-brush-was-last-activated [ ]\n  set patches-drawn-on-since-brush-was-held-down no-patches\n  set current-mousexy (list mouse-xcor mouse-ycor)\n  set current-mouse-down? mouse-down?\n  set current-mouse-inside?  mouse-inside?\n  set brush-in-draw-mode true\n  set brush-style \"free-form\"\n  set brush-shape \"square\"\n  set brush-type \"wall\"\n  set brush-icon-size 4\n  set shape-drawn-by-brush \"rectangle\"\n  set center-patch-of-drawn-shape nobody\n  set patches-affected-by-drawn-shape no-patches\n  set brush-icon-transparency-normalized 0.8\n  set gfx-displaying-patches-affected-by-drawn-shape no-turtles\n  create-brush-border-outlines 1 [hide-turtle set -brush-border-outline self]\n  create-brush-cursors 1 [hide-turtle set -brush-cursor self]\n  create-gfx-overlay 1 [set brush-type-icon self\n    set color add-transparency red brush-icon-transparency-normalized\n    setxy (max-pxcor - brush-icon-size - ((brush-icon-size - 1) * 0.5)) (max-pycor - ((brush-icon-size - 1) * 0.5))\n    set size brush-icon-size]\n  create-gfx-overlay 1 [set brush-draw-erase-mode-icon self\n    set color add-transparency red brush-icon-transparency-normalized\n    setxy (max-pxcor - ((brush-icon-size - 1) * 0.5)) (max-pycor - ((brush-icon-size - 1) * 0.5))\n    set size brush-icon-size ]\n  update-brush-cursor-icon\n  update-brush-type-icon\n  update-brush-add-erase-mode-icon\nend\n\nto draw-with-brush\n  (ifelse\n    brush-style = \"free-form\" [draw-with-free-form-brush]\n    brush-style = \"shape\" [draw-shape-with-brush])\nend\n\nto draw-shape-with-brush\n  (ifelse\n    is-brush-pressed-down [configure-new-shape-with-brush]\n    brush-is-held-down [configure-current-shape-with-brush]\n    brush-has-been-clicked [draw-shape-configured-by-brush remove-gfx-display-of-patches-to-be-affected-by-drawn-shape log-shape-drawn] )\nend\n\nto set-center-for-drawn-shape\n  set center-patch-of-drawn-shape patch-under-brush\nend\n\nto configure-new-shape-with-brush\n  set-center-for-drawn-shape\n  set patches-affected-by-drawn-shape patch-set patch-under-brush\n  update-display-of-patches-to-be-affected-by-drawn-shape\nend\n\nto configure-current-shape-with-brush\n  if is-new-size-configured-for-drawn-shape [\n    set-patches-to-be-affected-by-current-drawn-shape-configuration\n    update-display-of-patches-to-be-affected-by-drawn-shape\n  ]\nend\n\nto-report is-new-size-configured-for-drawn-shape\n  let current-distance-of-patch-under-brush-from-shape-center [distance center-patch-of-drawn-shape] of patch-under-brush\n  let former-distance-of-patch-under-brush-from-shape-center [distance center-patch-of-drawn-shape] of (patch-at-point mousexy-when-brush-was-last-activated)\n  report current-distance-of-patch-under-brush-from-shape-center != former-distance-of-patch-under-brush-from-shape-center\nend\n\nto update-display-of-patches-to-be-affected-by-drawn-shape\n  remove-gfx-display-of-patches-to-be-affected-by-drawn-shape\n  add-gfx-display-of-patches-to-be-affected-by-drawn-shape\nend\n\nto remove-gfx-display-of-patches-to-be-affected-by-drawn-shape\n  ask gfx-displaying-patches-affected-by-drawn-shape [die]\nend\n\nto add-gfx-display-of-patches-to-be-affected-by-drawn-shape\n  ask patches-affected-by-drawn-shape [visually-display-this-patch-as-affected-by-drawn-shape]\nend\n\nto visually-display-this-patch-as-affected-by-drawn-shape\n  sprout-gfx-overlay 1 [\n    set shape \"square\"\n    set color yellow\n    set gfx-displaying-patches-affected-by-drawn-shape (turtle-set gfx-displaying-patches-affected-by-drawn-shape self)\n  ]\nend\n\nto set-patches-to-be-affected-by-current-drawn-shape-configuration\n  (ifelse\n    shape-drawn-by-brush = \"circle\" [set-patches-to-be-affected-by-current-drawn-circle-configuration ]\n    shape-drawn-by-brush = \"rectangle\" [set-patches-to-be-affected-by-current-drawn-rectangle-configuration ]\n    shape-drawn-by-brush = \"square\" [set-patches-to-be-affected-by-current-drawn-square-configuration ]\n    shape-drawn-by-brush = \"line\" [set-patches-to-be-affected-by-current-drawn-line-configuration ] )\nend\n\nto-report radius-of-circle-drawn-by-brush\n  report [distance center-patch-of-drawn-shape] of patch-under-brush\nend\n\nto-report size-of-square-drawn-by-brush\n  report (max list delta-pxcor center-patch-of-drawn-shape patch-under-brush delta-pycor center-patch-of-drawn-shape patch-under-brush)\nend\n\nto-report delta-pycor [patch1 patch2]\n  report abs ([pycor] of patch1 - [pycor] of patch2)\nend\n\nto-report delta-pxcor [patch1 patch2]\n  report abs ([pxcor] of patch1 - [pxcor] of patch2)\nend\n\nto set-patches-to-be-affected-by-current-drawn-line-configuration\n  let point1 (list [pxcor] of center-patch-of-drawn-shape [pycor] of center-patch-of-drawn-shape)\n  ;set patches-affected-by-drawn-shape patches-line-intersects point1 current-mousexy\n  set patches-affected-by-drawn-shape patches-line-intersects item 0 point1 item 1 point1 item 0 current-mousexy item 1 current-mousexy\nend\n\nto set-patches-to-be-affected-by-current-drawn-rectangle-configuration\n  let corner-xcor-delta-from-center delta-pxcor center-patch-of-drawn-shape patch-under-brush\n  let corner-ycor-delta-from-center delta-pycor center-patch-of-drawn-shape patch-under-brush\n  let width (corner-xcor-delta-from-center * 2) + 1\n  let height (corner-ycor-delta-from-center * 2) + 1\n  set patches-affected-by-drawn-shape (patch-set\n    n-values height [right-side-ycor-delta-from-top -> [patch-at (corner-xcor-delta-from-center) (corner-ycor-delta-from-center - right-side-ycor-delta-from-top)] of center-patch-of-drawn-shape]\n    n-values height [left-side-ycor-delta-from-top -> [patch-at (-1 * corner-xcor-delta-from-center) (corner-ycor-delta-from-center - left-side-ycor-delta-from-top)] of center-patch-of-drawn-shape]\n    n-values width [top-side-xcor-delta-from-left -> [patch-at ((-1 * corner-xcor-delta-from-center) + top-side-xcor-delta-from-left) (corner-ycor-delta-from-center)] of center-patch-of-drawn-shape]\n    n-values width [bottom-side-xcor-delta-from-left -> [patch-at ((-1 * corner-xcor-delta-from-center) + bottom-side-xcor-delta-from-left) (-1 * corner-ycor-delta-from-center)] of center-patch-of-drawn-shape]\n  )\nend\n\nto set-patches-to-be-affected-by-current-drawn-square-configuration\n  let square-size size-of-square-drawn-by-brush\n  let side-length (square-size * 2) + 1\n  set patches-affected-by-drawn-shape (patch-set\n    n-values side-length [right-side-ycor-delta-from-top -> [patch-at (square-size) (square-size - right-side-ycor-delta-from-top)] of center-patch-of-drawn-shape]\n    n-values side-length [left-side-ycor-delta-from-top -> [patch-at (-1 * square-size) (square-size - left-side-ycor-delta-from-top)] of center-patch-of-drawn-shape]\n    n-values side-length [top-side-xcor-delta-from-left -> [patch-at ((-1 * square-size) + top-side-xcor-delta-from-left) (square-size)] of center-patch-of-drawn-shape]\n    n-values side-length [bottom-side-xcor-delta-from-left -> [patch-at ((-1 * square-size) + bottom-side-xcor-delta-from-left) (-1 * square-size)] of center-patch-of-drawn-shape]\n  )\nend\n\nto set-patches-to-be-affected-by-current-drawn-circle-configuration\n  let radius radius-of-circle-drawn-by-brush\n  set patches-affected-by-drawn-shape patches with [(distance center-patch-of-drawn-shape > radius - 0.5) and (distance center-patch-of-drawn-shape < radius + 0.5)]\nend\n\nto-report is-shape-being-configured\n  report has-center-of-drawn-shape-been-set-inside-world\nend\n\nto-report has-center-of-drawn-shape-been-set-inside-world\n  report center-patch-of-drawn-shape != nobody\nend\n\nto-report is-brush-pressed-down\n  report current-mouse-down? and (not mouse-down?-when-brush-was-last-activated)\nend\n\nto draw-with-free-form-brush\n  ifelse brush-is-held-down [\n    on-brush-is-held-down\n    if is-brush-drawing-on-patches-not-drawn-on-since-brush-was-held-down [\n      on-brush-drawing-only-once-per-patch]]\n  [\n    if brush-has-been-clicked [\n      on-brush-has-been-clicked]\n  ]\nend\n\nto-report brush-has-been-clicked\n  report (not brush-is-held-down) and (brush-was-held-down-last-time-brush-was-activated)\nend\n\nto-report brush-was-held-down-last-time-brush-was-activated\n  report mouse-down?-when-brush-was-last-activated\nend\n\nto-report patches-under-brush\n  report patches-affected-by-brush-shape-used-at-patch patch-under-brush\nend\n\nto-report patches-affected-by-brush-shape-used-at-patch [-patch]\n  (ifelse\n    brush-shape = \"circle\" [report patches-affected-by-a-circle-shaped-brush-at-patch -patch]\n    brush-shape = \"square\" [report patches-affected-by-a-square-shaped-brush-at-patch -patch ] )\nend\n\nto-report patches-affected-by-a-circle-shaped-brush-at-patch [-patch]\n  report [patches in-radius (brush-size / 2)] of -patch\nend\n\nto-report patches-affected-by-a-square-shaped-brush-at-patch [-patch]\n  report (patch-set n-values (brush-size ^ 2) [i -> patch (([pxcor] of -patch - (brush-size / 2) + 0.5) + i mod brush-size) (([pycor] of -patch - (brush-size / 2) + 0.5) + int(i / brush-size))])\nend\n\nto-report patches-brush-is-drawing-on\n    report patch-set [patches-affected-by-brush-shape-used-at-patch self] of patches-brush-moved-over-while-being-held-down\nend\n\nto-report patches-brush-moved-over-while-being-held-down\n    ;report patches-line-intersects coordinates-of-brush-when-last-held-down mouse-coordinates\n  report patches-line-intersects item 0 coordinates-of-brush-when-last-held-down item 1 coordinates-of-brush-when-last-held-down item 0 mouse-coordinates item 1 mouse-coordinates\nend\n\nto-report coordinates-of-brush-when-last-held-down\n  report mousexy-when-brush-was-last-activated\n  ;ifelse mouse-down?-when-brush-was-last-activated [report mousexy-when-brush-was-last-activated] [report mouse-coordinates]\nend\n\nto-report newly-drawn-on-patches-brush-is-drawing-on\n  report patch-set patches-brush-is-drawing-on with [not member? self get-patches-drawn-on-since-brush-was-held-down]\nend\n\nto-report patch-under-brush\n  report patch-at-point mouse-coordinates\nend\n\nto-report mouse-coordinates\n  report current-mousexy\nend\n\nto set-brush-style-as-free-form\n  set brush-style \"free-form\"\n  on-user-set-brush-style-to-free-form\nend\n\nto set-brush-style-as-shape\n  set brush-style \"shape\"\n  on-user-set-brush-style-to-shape\nend\n\nto set-brush-shape [-brush-shape]\n  set brush-shape -brush-shape\nend\n\nto set-shape-drawn-by-brush [-shape]\n  set shape-drawn-by-brush -shape\nend\n\nto set-brush-type [-brush-type]\n  set brush-type -brush-type\n  on-brush-type-set\nend\n\nto on-brush-type-set\n  update-brush-type-icon\nend\n\nto on-user-set-brush-style-to-shape\n  ;set-brush-cursor-icon-to-draw\n  update-brush-cursor-icon\n  update-brush-draw-erase-icon\nend\n\nto on-user-set-brush-style-to-free-form\n  update-brush-draw-erase-icon\n  update-brush-cursor-icon\nend\n\nto-report brush-type-already-chosen [-brush-type]\n  report brush-type = -brush-type\nend\n\nto toggle-add-erase\n  set brush-in-draw-mode ifelse-value brush-in-draw-mode = true [false] [true]\nend\n\nto display-brush-border-outline\n  ifelse show-brush-border? [\n    show-brush-border-outline\n    set-brush-border-outline-coordinates\n    set-brush-border-outline-shape\n    set-brush-border-outline-color\n    set-brush-border-outline-size\n    set-brush-border-outline-label ]\n  [\n    hide-brush-border-outline ]\nend\n\nto-report show-brush-border?\n  report (brush-style = \"free-form\" and current-mouse-inside?)\nend\n\nto display-brush-cursor\n  ifelse current-mouse-inside? [\n    show-brush-cursor\n    set-brush-cursor-coordinates ]\n  [\n    hide-brush-cursor ]\nend\n\nto update-brush-type-icon\n  update-brush-type-icon-shape\n  update-brush-type-icon-color\nend\n\nto update-brush-type-icon-shape\n  carefully [\n    ask brush-type-icon [set shape word \"brush-type-icon-\" brush-type] ]\n  [\n    ask brush-type-icon [set shape \"full-square\"]\n  ]\nend\n\nto update-brush-type-icon-color\nend\n\nto set-brush-type-icon-color [-color]\n  ask brush-type-icon [set color add-transparency -color brush-icon-transparency-normalized]\nend\n\nto update-brush-add-erase-mode-icon\n  ifelse is-brush-in-draw-mode [\n    set-brush-draw-erase-icon-to-draw ]\n  [\n    set-brush-draw-erase-icon-to-erase ]\nend\n\nto-report is-brush-in-draw-mode\n  report (brush-in-draw-mode = true)\nend\n\nto-report is-brush-in-erase-mode\n  report not is-brush-in-draw-mode\nend\n\nto-report add-transparency [-color transparency-normalized]\n  report lput (transparency-normalized * 255) extract-rgb -color\nend\n\nto hide-brush-cursor\n  ask -brush-cursor [hide-turtle]\nend\n\nto show-brush-cursor\n  ask -brush-cursor [show-turtle]\nend\n\nto set-brush-cursor-coordinates\n  (ifelse\n    brush-style = \"free-form\" [\n      carefully [ ask -brush-cursor [set xcor (item 0 current-mousexy + 1.5)] ] []\n      carefully [ ask -brush-cursor [set ycor (item 1 current-mousexy + 1.5)] ] [] ]\n    brush-style = \"shape\" [\n      carefully [ ask -brush-cursor [set xcor ([pxcor] of patch-under-brush)]] []\n      carefully [ ask -brush-cursor [set ycor ([pycor] of patch-under-brush)]] [] ] )\n  ;carefully [ ask -brush-cursor [set xcor ([pxcor] of patch-under-brush + 1.5)] ] []\n  ;carefully [ ask -brush-cursor [set ycor ([pycor] of patch-under-brush + 1.5)] ] []\nend\n\nto display-brush-gfx\n  display-brush-border-outline\n  display-brush-cursor\n  diplay-brush-xy-as-label-on-brush-mode-icon\n  make-sure-brush-gets-updated-in-display-atleast-every 0.04\nend\n\nto make-sure-brush-gets-updated-in-display-atleast-every [seconds]\n  if brush-activated-after-model-was-advanced [ every seconds [display] ]\n  ;update-display-every-given-time-interval-if-ticks-have-not-advanced-since-brush-was-last-activated seconds\nend\n\nto diplay-brush-xy-as-label-on-brush-mode-icon\n  ifelse current-mouse-inside? [\n    ask brush-draw-erase-mode-icon [set label (word int item 0 current-mousexy \", \" int item 1 current-mousexy) ] ]\n  [\n    ask brush-draw-erase-mode-icon [set label \"\"]\n  ]\nend\n\nto set-brush-border-outline-label\n  ;ask patch 0 min-pycor [set plabel brush-type]\nend\n\nto set-brush-border-outline-coordinates\n  let -patch-under-brush patch-under-brush\n  (ifelse\n    brush-shape = \"square\" [ ;offset brush for even sizes since patch under brush can not be center\n      carefully [\n        ask -brush-border-outline [setxy ([pxcor] of -patch-under-brush + 0.5 * ((brush-size + 1) mod 2)) ([pycor] of -patch-under-brush + 0.5 * ((brush-size + 1) mod 2))]] [] ]\n    brush-shape = \"circle\" [ask -brush-border-outline [setxy [pxcor] of -patch-under-brush [pycor] of -patch-under-brush]])\nend\n\nto hide-brush-border-outline\n  ask -brush-border-outline [hide-turtle]\nend\n\nto show-brush-border-outline\n  ask -brush-border-outline [show-turtle]\nend\n\nto set-brush-border-outline-shape\n  (ifelse\n    brush-shape = \"square\" [ask -brush-border-outline [set shape \"square outline thick\"] ]\n    brush-shape = \"circle\" [ask -brush-border-outline [set shape \"circle outline\"] ])\nend\n\nto set-brush-border-outline-color\n  ifelse is-brush-in-draw-mode [\n    ask -brush-border-outline [set color cyan] ]\n  [\n    ask -brush-border-outline [set color red] ]\nend\n\nto set-brush-border-outline-size\n  ask -brush-border-outline [set size brush-size]\nend\n\nto activate-brush\n  set-brush-state\n  display-brush-gfx\n  draw-with-brush\n  keep-track-of-current-brush-state\nend\n\nto set-brush-state\n  set current-mousexy (list mouse-xcor mouse-ycor)\n  set current-mouse-down? mouse-down?\n  set current-mouse-inside? mouse-inside?\n  if is-brush-pressed-down [set mouse-xy-when-brush-was-pressed-down current-mousexy]\nend\n\nto keep-track-of-current-brush-state\n  update-which-patches-have-been-affected-by-brush-since-it-was-held-down\n  set mouse-down?-when-brush-was-last-activated current-mouse-down?\n  set mousexy-when-brush-was-last-activated current-mousexy\n  set brush-activated-after-model-was-advanced true\nend\n\nto-report brush-is-held-down\n  report current-mouse-down?\nend\n\nto update-which-patches-have-been-affected-by-brush-since-it-was-held-down\n  ifelse brush-is-held-down [\n    set patches-drawn-on-since-brush-was-held-down (patch-set patches-drawn-on-since-brush-was-held-down\n      patches-brush-is-drawing-on) ]\n  [\n    set patches-drawn-on-since-brush-was-held-down no-patches ]\nend\n\nto-report is-brush-drawing-on-patches-not-drawn-on-since-brush-was-held-down\n  report any? newly-drawn-on-patches-brush-is-drawing-on\nend\n\nto-report get-patches-drawn-on-since-brush-was-held-down\n  report patches-drawn-on-since-brush-was-held-down\nend\n\nto user-set-brush-to-draw\n  set brush-in-draw-mode true\n  on-user-set-brush-to-draw\nend\n\nto user-set-brush-to-erase\n  set brush-in-draw-mode false\n  on-user-set-brush-to-erase\nend\n\nto on-user-set-brush-to-draw\n  ;set-brush-draw-erase-icon-to-draw\n  update-brush-draw-erase-icon\n  set-brush-cursor-icon-to-draw\nend\n\nto on-user-set-brush-to-erase\n  ;set-brush-draw-erase-icon-to-erase\n  update-brush-draw-erase-icon\n  set-brush-icon-to-erase\nend\n\nto update-brush-draw-erase-icon\n  (ifelse\n    brush-style = \"shape\" [set-brush-draw-erase-icon-as-current-shape-drawn-by-brush ]\n    brush-style = \"free-form\" [set-brush-draw-erase-icon-for-free-form-brush ])\nend\n\nto set-brush-draw-erase-icon-as-current-shape-drawn-by-brush\n  ask brush-draw-erase-mode-icon [set shape (word \"brush-mode-icon-\" shape-drawn-by-brush)]\nend\n\nto set-brush-draw-erase-icon-for-free-form-brush\n  ifelse is-brush-in-draw-mode [set-brush-draw-erase-icon-to-draw] [set-brush-draw-erase-icon-to-erase]\nend\n\nto set-brush-cursor-icon-to-draw\n  ask -brush-cursor [set shape \"brush-cursor-draw6\" set size 3]\nend\n\nto set-brush-icon-to-erase\n  ask -brush-cursor [set shape \"brush-cursor-erase\" set size 3]\nend\n\nto set-brush-cursor-icon-to-shape-configure\n  ask -brush-cursor [set shape \"brush-cursor-shape\" set size 4]\nend\n\nto update-brush-cursor-icon\n  (ifelse\n    brush-style = \"shape\" [set-brush-cursor-icon-to-shape-configure ]\n    is-brush-in-draw-mode [set-brush-cursor-icon-to-draw ]\n    [set-brush-icon-to-erase ] )\nend\n\nto set-brush-draw-erase-icon-to-draw\n  ask brush-draw-erase-mode-icon [set shape \"brush-mode-icon-draw2\"]\nend\n\nto set-brush-draw-erase-icon-to-erase\n  ask brush-draw-erase-mode-icon [set shape \"brush-mode-icon-erase\"]\nend\n\n;==== Brush functions unique to this model ======\n\nto draw-shape-configured-by-brush\n  if brush-type = \"wall\" [draw-shape-with-wall]\nend\n\nto draw-shape-with-wall\n  create-wall-in-patches patches-affected-by-drawn-shape\nend\n\nto on-brush-is-held-down\n  (ifelse\n    brush-type = \"ball\" [on-brush-held-down-with-ball ]\n    brush-type = \"halo\" [on-brush-held-down-with-halo ]\n    brush-type = \"trace\" [on-brush-held-down-with-trace ]\n    brush-type = \"field\" [on-brush-held-down-with-field] )\nend\n\nto on-brush-drawing-only-once-per-patch\n  (ifelse\n    brush-type = \"wall\" [on-brush-used-with-wall ]\n    brush-type = \"counter\" [on-brush-used-with-counter ] )\nend\n\nto on-brush-has-been-clicked\n  (ifelse\n    brush-type = \"ball\" [on-brush-clicked-with-ball ]\n    brush-type = \"field\" [on-brush-clicked-with-field ] )\n  log-free-form-brush-used\nend\n\n\n\n\n\nto log-free-form-brush-used\n  log-output (word ifelse-value is-brush-in-draw-mode [\"paint-\"] [\"erase-\"] brush-type)\nend\n\nto log-shape-drawn\n  log-output (word \"place-\" shape-drawn-by-brush)\nend\n\nto on-brush-clicked-with-field\n  ifelse is-brush-in-draw-mode [finalize-field-configuration-with-brush] [erase-field-number-under-brush]\nend\n\nto erase-field-number-under-brush\n  if [has-field] of patch-under-brush [erase-field [field-number] of patch-under-brush]\nend\n\nto on-brush-held-down-with-field\n  if is-brush-in-draw-mode [create-field-with-brush]\nend\n\nto create-field-with-brush\n  ifelse is-brush-currently-configuring-a-field [\n    configure-current-field-with-brush ]\n  [\n    configure-new-field-with-brush\n  ]\nend\n\nto-report is-brush-currently-configuring-a-field\n  report first-patch-brush-configured-field-on != nobody\nend\n\nto configure-new-field-with-brush\n  if not [has-wall] of patch-under-brush [\n    set field-count field-count + 1\n    set first-patch-brush-configured-field-on patch-under-brush\n  ]\nend\n\nto configure-current-field-with-brush\n  let field-x-value 0\n  let field-y-value 0\n  let prev-mouse-xcor item 0 mousexy-when-brush-was-last-activated\n  let prev-mouse-ycor item 1 mousexy-when-brush-was-last-activated\n\n  if not [has-wall] of patch-under-brush [\n    set field-x-value (mouse-xcor - prev-mouse-xcor)\n    set field-y-value (mouse-ycor - prev-mouse-ycor)\n    if (field-x-value != 0 or field-y-value != 0 ) [ ; mouse moved from prev location\n      ask patch-under-brush [\n        ;output-print (word   field-x-value \" \" field-y-value \" \" patch-under-brush)\n        set pcolor field-color\n        set field-number field-count\n        set isPainted  TRUE\n        set field-x field-x-value  / (sqrt ((field-x-value ^ 2) + (field-y-value ^ 2)))\n        set field-y field-y-value  / (sqrt ((field-x-value ^ 2) + (field-y-value ^ 2)))\n        paint-arrow patch-under-brush\n      ]\n      ;paint-arrow this-patch\n      set prev-mouse-xcor mouse-xcor\n      set prev-mouse-ycor mouse-ycor\n    ]\n  ]\nend\n\nto finalize-field-configuration-with-brush\n  if is-brush-currently-configuring-a-field [\n    set first-patch-brush-configured-field-on nobody\n    fill-field\n    if (prev-command-name != \"paint-field\") [log-output \"paint-field\"]\n  ]\nend\n\nto-report balls-in-patches [-patches]\n  report (turtle-set [balls-here] of patches-brush-is-drawing-on)\nend\n\nto-report balls-in-patches-brush-is-drawing-on\n  report balls-in-patches patches-brush-is-drawing-on\nend\n\nto on-brush-used-with-counter\n  if is-brush-pressed-down [\n    set-counter-number-to-be-drawn-with-brush ]\n  ifelse is-brush-in-draw-mode [create-counters-in-patches patches-brush-is-drawing-on] [remove-counters-from-patches patches-brush-is-drawing-on]\nend\n\nto remove-counters-from-patches [-patches]\n  ask -patches [remove-counter-from-patch]\nend\n\nto create-counters-in-patches [-patches]\n  ask -patches [create-counter-in-patch]\nend\n\n;patch procedure\nto remove-counter-from-patch\n  if has-counter [\n    let counter-number-removed counter-number-here\n    ask counters-here [die]\n    on-counter-removed-from-patch counter-number-removed\n  ]\nend\n\nto on-counter-removed-from-patch [counter-number-removed]\n  update-position-of-counter-information counter-number-removed\nend\n\nto-report can-create-counter-in-patch\n  report (not has-wall) and (not has-counter)\nend\n\n;patch procedure\nto create-counter-in-patch\n  if can-create-counter-in-patch [\n    sprout-counters 1 [\n      set shape  \"square\"\n      set size counter-width\n      ;set color counter-color\n      ;let hsb-color extract-hsb item counter-number-drawn-by-brush base-colors\n      ;set hsb-color replace-item 1 hsb-color 100\n      ;set hsb-color replace-item 2 hsb-color 100\n      set color (item ((counter-number-drawn-by-brush - 1) mod length default-colors-for-ball-populations) default-colors-for-ball-populations) + 2\n      set counter-number counter-number-drawn-by-brush\n    ]\n    on-counter-added-to-patch\n  ]\nend\n\n;patch procedure\nto-report counter-number-here\n  report [counter-number] of one-of counters-here\nend\n\nto-report create-initialized-counter-information-gfx-overlay [-counter-number]\n  let new-counter-information-gfx-overlay nobody\n  let new-gfx-overlays n-values 3 [sprout-initialized-gfx-overlay]\n  sprout-counter-information-gfx 1 [\n    set new-counter-information-gfx-overlay self\n    hide-turtle\n    set shape \"empty\"\n    set counter-number-gfx-overlay item 0 new-gfx-overlays\n    ask counter-number-gfx-overlay [set label word \"Area: \" -counter-number]\n    set ball-count-gfx-overlay item 1 new-gfx-overlays\n  ]\n  report new-counter-information-gfx-overlay\nend\n\nto-report ball-count-in-counter [-counter-number]\n  report item (-counter-number - 1) ball-count-in-counters\nend\n\nto update-ball-count-in-counter [-counter-number]\n  ask get-counter-information -counter-number [\n    ask ball-count-gfx-overlay [set label (word \"Count: \" ball-count-in-counter -counter-number)]\n  ]\nend\n\n; patch procedure\nto-report sprout-initialized-gfx-overlay\n  let gfx-overlay-created nobody\n  sprout-gfx-overlay 1 [set gfx-overlay-created self hide-turtle set shape \"empty\"]\n  report gfx-overlay-created\nend\n\nto increase-counter [-counter-number]\n  set ball-count-in-counters replace-item (-counter-number - 1) ball-count-in-counters ((ball-count-in-counter -counter-number) + 1)\n  update-ball-count-in-counter -counter-number\nend\n\nto initialize-counter-information-if-not-initialized-yet [-counter-number]\n  if -counter-number > length counters-information-gfx-overlay [\n    set counters-information-gfx-overlay lput create-initialized-counter-information-gfx-overlay -counter-number counters-information-gfx-overlay\n    set ball-count-in-counters lput 0 ball-count-in-counters\n    update-ball-count-in-counter -counter-number\n  ]\nend\n\n;patch procedure\nto on-counter-added-to-patch\n  initialize-counter-information-if-not-initialized-yet counter-number-here\n  update-position-of-counter-information counter-number-here\nend\n\nto-report counters-of [-counter-number]\n  report counters with [counter-number = -counter-number]\nend\n\nto-report counters-with-counter-number-exist [-counter-number]\n  report any? counters-of -counter-number\nend\n\nto-report get-counter-information [-counter-number]\n  report item (-counter-number - 1) counters-information-gfx-overlay\nend\n\nto hide-counter-information [-counter-number]\n  ask get-counter-information -counter-number [\n    ask counter-number-gfx-overlay [hide-turtle]\n    ask ball-count-gfx-overlay [hide-turtle]\n  ]\nend\n\nto-report center-turtle [-turtles]\n  let mean-xcor mean [xcor] of -turtles\n  let mean-ycor mean [ycor] of -turtles\n  report min-one-of -turtles [distancexy mean-xcor mean-ycor]\nend\n\nto set-counter-information-in-center [-counter-number]\n  let center-counter center-turtle counters-of -counter-number\n  let center-counter-xcor [xcor] of center-counter\n  let center-counter-ycor [ycor] of center-counter\n  ask get-counter-information -counter-number [\n    carefully [\n      ask counter-number-gfx-overlay [setxy center-counter-xcor center-counter-ycor show-turtle]\n      ask ball-count-gfx-overlay [setxy center-counter-xcor (center-counter-ycor - 1) show-turtle]\n    ][]\n  ]\nend\n\nto update-position-of-counter-information [-counter-number]\n  ifelse not counters-with-counter-number-exist -counter-number [\n    hide-counter-information -counter-number]\n  [\n    set-counter-information-in-center -counter-number\n  ]\nend\n\n;patch procedure\nto-report has-counter\n  report count counters-here > 0\nend\n\nto-report counter-number-of-closest-neighbor-of-patches-brush-is-drawing-on-to-mouse-xy\n  report 0\nend\n\nto-report highest-counter-number-in-use\n  report max [counter-number] of counters\nend\n\nto-report new-counter-number\n  ifelse length ball-count-in-counters > 0 [\n    report length ball-count-in-counters + 1 ]\n  [\n    report 1\n  ]\nend\n\nto-report one-of-patches-brush-is-drawing-on-has-a-counter\n  report count patches-brush-is-drawing-on with [has-counter] > 0\nend\n\nto-report counter-number-in-patch-brush-is-drawing-on-closest-to-mouse-xy\n  report [counter-number-here] of min-one-of patches-brush-is-drawing-on with [has-counter] [distancexy item 0 current-mousexy item 1 current-mousexy]\nend\n\nto set-counter-number-to-be-drawn-with-brush\n  ifelse one-of-patches-brush-is-drawing-on-has-a-counter [\n    set counter-number-drawn-by-brush counter-number-in-patch-brush-is-drawing-on-closest-to-mouse-xy]\n  [\n    set counter-number-drawn-by-brush new-counter-number\n  ]\nend\n\nto on-brush-held-down-with-trace\n  ifelse is-brush-in-draw-mode [trace balls-in-patches-brush-is-drawing-on] [stop-tracing balls-in-patches-brush-is-drawing-on]\nend\n\nto on-brush-held-down-with-halo\n  ifelse is-brush-in-draw-mode [add-halo-to-balls balls-in-patches-brush-is-drawing-on] [remove-halo-from-balls balls-in-patches-brush-is-drawing-on]\nend\n\nto on-brush-clicked-with-ball\n  if is-brush-in-draw-mode [create-balls-of-population-selected-in-ui]\nend\n\nto on-brush-held-down-with-ball\n  if is-brush-in-erase-mode [remove-balls-from-patches-brush-is-drawing-on]\nend\n\nto remove-balls-from-patches-brush-is-drawing-on\n  ask balls-in-patches-brush-is-drawing-on [remove-ball]\nend\n\nto create-balls-of-population-selected-in-ui\n  if is-a-population-selected-in-ui [\n    ;update-interactively-ball-population-property-settings\n    create-balls-if-under-maximum-capacity population-to-set-properties-for-in-ui number-of-balls-to-add mouse-xcor mouse-ycor\n  ]\nend\n\nto on-brush-used-with-wall\n  ifelse is-brush-in-draw-mode [create-wall-in-patches patches-brush-is-drawing-on] [remove-wall-from-patches patches-brush-is-drawing-on]\nend\n\nto on-wall-brush-button-clicked\n  if is-first-time-radio-button-is-pressed-down \"wall\" [\n    set-brush-type \"wall\"\n    set-brush-style-as-free-form ]\n  if should-release-brush-radio-button? \"wall\" [stop]\n  activate-brush\nend\n\nto on-field-brush-button-clicked\n  if is-first-time-radio-button-is-pressed-down \"field\" [\n    set-brush-type \"field\"\n    set-brush-style-as-free-form\n  ]\n  if should-release-brush-radio-button? \"field\" [stop]\n  activate-brush\nend\n\nto on-counter-brush-button-clicked\n  if is-first-time-radio-button-is-pressed-down \"counter\" [\n    set-brush-type \"counter\"\n    set-brush-style-as-free-form\n  ]\n  if should-release-brush-radio-button? \"counter\" [stop]\n  activate-brush\nend\n\nto on-trace-brush-button-clicked\n  if should-release-brush-radio-button? \"trace\" [stop]\n  set-brush-type \"trace\"\n  set-brush-style-as-free-form\n  activate-brush\nend\n\nto on-halo-brush-button-clicked\n  if should-release-brush-radio-button? \"halo\" [stop]\n  set-brush-type \"halo\"\n  set-brush-style-as-free-form\n  activate-brush\nend\n\nto on-ball-brush-button-clicked\n  if should-release-brush-radio-button? \"ball\" [stop]\n  set-brush-type \"ball\"\n  set-brush-style-as-free-form\n  activate-brush\nend\n\nto on-wall-line-brush-button-clicked\n  if should-release-brush-radio-button? \"wall-line\" [stop]\n  set-brush-type \"wall\"\n  set-shape-drawn-by-brush \"line\"\n  set-brush-style-as-shape\n  activate-brush\nend\n\nto on-wall-rectangle-brush-button-clicked\n  if should-release-brush-radio-button? \"wall-rectangle\" [stop]\n  set-brush-type \"wall\"\n  set-shape-drawn-by-brush \"rectangle\"\n  set-brush-style-as-shape\n  activate-brush\nend\n\nto on-wall-circle-brush-button-clicked\n  if should-release-brush-radio-button? \"wall-circle\" [stop]\n  set-brush-type \"wall\"\n  set-shape-drawn-by-brush \"circle\"\n  set-brush-style-as-shape\n  activate-brush\nend\n\nto on-wall-square-brush-button-clicked\n  if is-first-time-radio-button-is-pressed-down \"wall-square\" [\n    set-brush-type \"wall\"\n    set-shape-drawn-by-brush \"square\"\n    set-brush-style-as-shape\n  ]\n  if should-release-brush-radio-button? \"wall-square\" [stop]\n  activate-brush\nend\n\n\n;=========================\n\nto create-wall-in-patches [-patches]\n  foreach sort-patches-by-proximity-to-their-most-center-patch -patches [-patch -> ask -patch [create-wall-in-patch]]\nend\n\nto-report sort-patches-by-proximity-to-their-most-center-patch [-patches]\n  let -center-patch center-agent-world-wrap -patches\n  report sort-by [ [patch1 patch2] -> (distance-between-patches patch1 -center-patch) < (distance-between-patches patch2 -center-patch)] -patches\nend\n\nto-report distance-between-patches [patch1 patch2]\n  report [distance patch2] of patch1\nend\n\nto-report center-agent-world-wrap [-patches]\n  report min-one-of -patches [sum-distances-to-patches -patches]\nend\n\n;patch-procedure\nto-report sum-distances-to-patches [-patches]\n  let patch-to-calculate-distance-from self\n  report sum [distance-between-patches patch-to-calculate-distance-from self] of -patches\nend\n\nto remove-wall-from-patches [-patches]\n  ask -patches [remove-wall-in-patch]\nend\n\n;ball procedure\nto-report has-halo\n  report get-halo != nobody\nend\n\n;ball procedure\nto-report get-halo\n  let retreived-halo nobody\n  let links-to-halos my-links with [is-halo? other-end]\n  if any? links-to-halos [set retreived-halo [other-end] of one-of links-to-halos]\n  report retreived-halo\nend\n\n;ball procedure\nto remove-halo\n  ask turtle-set ([other-end] of my-links with [is-halo? other-end]) [die]\nend\n\n;ball procedure\nto remove-ball\n  remove-halo\n  die\nend\n\nto remove-halo-from-balls [-balls]\n  ask -balls with [has-halo] [remove-halo]\nend\n\nto add-halo-to-balls [-balls]\n  ask -balls with [not has-halo] [make-halo]\nend\n\n;turtle procedure\nto trace [-turtles]\n  ask -turtles [pen-down]\nend\n\n;turtle procedure\nto stop-tracing [-turtles]\n  ask -turtles [pen-up]\nend\n\nto-report patch-at-point [point]\n  report patch first point last point\nend\n\n;===== INTERSECTION MATH ==================\n\nto-report patches-line-intersects [x1 y1 x2 y2]\n  let -start patch x1 y1\n  let -stop patch x2 y2\n  let neighbors-stop [neighbors] of -stop\n  let result (patch-set -start)\n  if -start != -stop [\n    let -heading heading-between-points x1 y1 x2 y2\n    let current-patch -start\n    while [current-patch != -stop and not member? current-patch neighbors-stop] [\n      set current-patch min-one-of ([neighbors with [not member? self result]] of current-patch)\n      [abs (-heading - (heading-between-points x1 y1 pxcor pycor))]\n      set result (patch-set result current-patch)\n    ]\n  ]\n  report (patch-set result -stop)\nend\n\nto-report heading-between-points [x1 y1 x2 y2]\n  report ((90 - atan (y2 - y1) (x2 - x1) ) mod 360)\nend\n; --- NETTANGO BEGIN ---\n\n; This block of code was added by the NetTango builder.  If you modify this code\n; and re-import it into the NetTango builder you may lose your changes or need\n; to resolve some errors manually.\n\n; If you do not plan to re-import the model into the NetTango builder then you\n; can safely edit this code however you want, just like a normal NetLogo model.\n\n; Code for Population 1\nto configure-population-1\n  #nettango#set-current-population-of-properties-being-set 1\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" \"group-1\"\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (65)\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango 0.5\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango \"random\"\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango 24\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend\n\n; Code for Population 2\nto configure-population-2\n  #nettango#set-current-population-of-properties-being-set 2\nif true [\n  set-property-for-population current-population-properties-are-being-set-for-in-nettango \"group-name\" \"group-2\"\n  set-initial-color-for-population current-population-properties-are-being-set-for-in-nettango (65)\n  set-initial-size-for-population current-population-properties-are-being-set-for-in-nettango 0.5\n  set-initial-heading-for-population current-population-properties-are-being-set-for-in-nettango \"random\"\n  set-initial-speed-for-population current-population-properties-are-being-set-for-in-nettango 10\n]\nif true [\n  set-ball-forward-property-for-population current-population-properties-are-being-set-for-in-nettango true\n]\nif true [\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"wall\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-same-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n  #nettango#setup-if-ball-meets-block\n  if true [\n    #nettango#set-if-ball-meets-block-what-ball-meets \"ball-other-population\"\n  ]\n  if true [\n    #nettango#set-heading-change \"collide\"\n    #nettango#set-speed-change \"collide\"\n  ]\n  #nettango#teardown-if-ball-meets-block\n]\nend\n; --- NETTANGO END ---\n@#$#@#$#@\nGRAPHICS-WINDOW\n201\n10\n706\n515\n-1\n-1\n9.53\n1\n11\n1\n1\n1\n0\n0\n0\n1\n-26\n26\n-26\n26\n1\n1\n1\nticks\n30\n\nSLIDER\n800\n273\n939\n306\nnumber-of-balls-to-add\nnumber-of-balls-to-add\n1\n100\n10\n1\n1\nNIL\nHORIZONTAL\n\nBUTTON\n32\n10\n149\n56\nstart a new task\nstart-new-task\\n\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n1\n\nBUTTON\n422\n539\n513\n572\nplay\ngo\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n101\n61\n181\n121\npaint-world\npaint-world\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nTEXTBOX\n6\n120\n192\n142\n-------------------------------------\n14\n0\n1\n\nBUTTON\n942\n273\n1002\n306\nErase All\nerase-all-balls-of-population-selected-in-ui\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n267\n539\n364\n572\nsave model \nsave-existing-layout\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n568\n539\n663\n572\nload model\nload-existing-layout\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nSWITCH\n726\n85\n851\n118\nColor-Speed\ncolor-speed\n1\n1\n-1000\n\nINPUTBOX\n0\n61\n97\n121\nbackground-color\n0\n1\n0\nColor\n\nMONITOR\n887\n220\n950\n265\nAmount\ncount balls with [population-num = population-to-set-properties-for-in-ui]\n17\n1\n11\n\nBUTTON\n26\n167\n91\n200\nDraw\nuser-set-brush-to-draw\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n98\n167\n168\n200\nErase\nuser-set-brush-to-erase\\nset-brush-style-as-free-form\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nSLIDER\n26\n208\n168\n241\nbrush-size\nbrush-size\n1\n10\n1\n1\n1\nNIL\nHORIZONTAL\n\nBUTTON\n26\n247\n94\n280\nCircle\nset-brush-shape \\\"circle\\\"\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n102\n247\n170\n280\nSquare\nset-brush-shape \\\"square\\\"\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n7\n317\n95\n350\nWall\non-wall-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n6\n506\n95\n539\nCircle\non-wall-circle-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n100\n506\n189\n539\nSquare\non-wall-square-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n6\n357\n95\n390\nCounter\non-counter-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n100\n318\n191\n351\nField\non-field-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n722\n273\n796\n306\nAdd Balls\non-ball-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n6\n397\n95\n430\nHalo\non-halo-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n100\n356\n189\n389\nTrace\non-trace-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nTEXTBOX\n75\n143\n126\n177\nBrush\n14\n0\n1\n\nTEXTBOX\n53\n293\n151\n311\nBrush Pallete\n14\n0\n1\n\nTEXTBOX\n788\n177\n865\n195\nBall Pallete\n14\n0\n1\n\nBUTTON\n6\n468\n95\n501\nLine\non-wall-line-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n100\n468\n189\n501\nRectangle\non-wall-rectangle-brush-button-clicked\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nTEXTBOX\n56\n444\n135\n462\nWall Shape\n14\n0\n1\n\nINPUTBOX\n53\n549\n131\n609\nwall-color\n105\n1\n0\nColor\n\nSWITCH\n726\n46\n886\n79\nflash-wall-collision\nflash-wall-collision\n0\n1\n-1000\n\nMONITOR\n803\n220\n876\n265\nPopulation\npopulation-to-set-properties-for-in-ui\n17\n1\n11\n\nBUTTON\n723\n220\n790\n265\nNext\nselect-next-population-in-properties-ui\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nTEXTBOX\n795\n19\n822\n37\nSFX\n14\n0\n1\n\nTEXTBOX\n750\n201\n897\n220\nSelect population to add balls\n11\n0\n1\n\nSWITCH\n725\n489\n830\n522\nlog-enabled\nlog-enabled\n1\n1\n-1000\n\nMONITOR\n728\n375\n800\n420\nPopulation 1\nitem 0 wall-collision-count\n17\n1\n11\n\nTEXTBOX\n766\n346\n900\n371\nWall Collisions\n14\n0\n1\n\nMONITOR\n807\n375\n882\n420\nPopulation 2\nitem 1 wall-collision-count\n17\n1\n11\n@#$#@#$#@\n## WHAT IS IT?\n\n(a general understanding of what the model is trying to show or explain)\n\n## HOW IT WORKS\n\n(what rules the agents use to create the overall behavior of the model)\n\n## HOW TO USE IT\n\n(how to use the model, including a description of each of the items in the Interface tab)\n\n## THINGS TO NOTICE\n\n(suggested things for the user to notice while running the model)\n\n## THINGS TO TRY\n\n(suggested things for the user to try to do (move sliders, switches, etc.) with the model)\n\n## EXTENDING THE MODEL\n\n(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)\n\n## NETLOGO FEATURES\n\n(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)\n\n## RELATED MODELS\n\n(models in the NetLogo Models Library and elsewhere which are of related interest)\n\n## CREDITS AND REFERENCES\n\n(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)\n@#$#@#$#@\ndefault\ntrue\n0\nPolygon -7500403 true true 150 5 40 250 150 205 260 250\n\nairplane\ntrue\n0\nPolygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15\n\narrow\ntrue\n0\nPolygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150\n\nbattery\nfalse\n9\nRectangle -7500403 true false 14 90 284 210\nRectangle -2674135 true false 255 90 285 210\nRectangle -2674135 true false 30 90 30 210\nRectangle -16777216 true false 15 90 45 210\nRectangle -13791810 false true 164 151 195 147\nRectangle -1 true false 25 137 31 161\nRectangle -1 true false 259 141 280 148\nRectangle -1 true false 18 146 40 153\n\nbox\nfalse\n0\nPolygon -7500403 true true 150 285 285 225 285 75 150 135\nPolygon -7500403 true true 150 135 15 75 150 15 285 75\nPolygon -7500403 true true 15 75 15 225 150 285 150 135\nLine -16777216 false 150 285 150 135\nLine -16777216 false 150 135 15 75\nLine -16777216 false 150 135 285 75\n\nbrush-cursor-draw6\nfalse\n7\nPolygon -1184463 true false 195 45 225 45 255 75 255 105 75 270 75 240 45 210 45 210 15 210 195 45\nPolygon -16777216 false false 15 210 195 45 225 45 255 75 255 105 75 270 75 240 45 210 15 210\nLine -16777216 false 225 45 45 210\nLine -16777216 false 255 75 75 240\nPolygon -2674135 true false 45 195 15 270\nPolygon -2674135 true false 15 210 0 285 75 270 75 240 45 210 15 210\nPolygon -16777216 false false 15 210 0 285 75 270 75 240 45 210 15 210\n\nbrush-cursor-erase\nfalse\n0\nPolygon -16777216 false false 75 195\nPolygon -2064490 true false 30 270 135 270 240 165 225 120 135 120 45 195 30 270\nLine -16777216 false 30 270 135 270\nLine -16777216 false 135 195 135 270\nLine -16777216 false 135 270 240 165\nLine -16777216 false 240 165 225 120\nLine -16777216 false 135 195 225 120\nLine -16777216 false 45 195 135 195\nLine -16777216 false 45 195 30 270\nLine -16777216 false 45 195 135 120\nLine -16777216 false 135 120 225 120\n\nbrush-cursor-shape\nfalse\n0\nCircle -13840069 true false 116 116 67\nRectangle -13840069 true false 138 143 243 158\nRectangle -13840069 true false 46 143 151 158\nRectangle -13840069 true false 142 43 157 148\nRectangle -13840069 true false 143 146 158 251\nCircle -16777216 true false 128 128 44\n\nbrush-cursor-shape3\nfalse\n0\nRectangle -13840069 true false 125 126 132 176\nRectangle -13840069 true false 125 169 177 176\nRectangle -13840069 true false 170 125 178 176\nRectangle -13840069 true false 125 125 177 132\nRectangle -13840069 true false 171 146 220 154\nRectangle -13840069 true false 82 146 131 154\nRectangle -13840069 true false 147 80 155 129\nRectangle -13840069 true false 147 170 155 219\n\nbrush-mode-icon-circle\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nCircle -13791810 true false 23 26 254\nCircle -7500403 true false 45 49 210\nRectangle -16777216 false false 0 0 300 300\n\nbrush-mode-icon-draw-circle\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nCircle -13345367 true false -2 -2 302\nCircle -7500403 true false 30 30 240\nPolygon -1184463 true false 210 30 240 30 270 60 270 90 90 255 90 225 60 195 60 195 30 195 210 30\nPolygon -16777216 false false 30 195 210 30 240 30 270 60 270 90 90 255 90 225 60 195 30 195\nLine -16777216 false 240 30 60 195\nLine -16777216 false 270 60 90 225\nPolygon -2674135 true false 45 195 15 270\nPolygon -2674135 true false 30 195 15 270 90 255 90 225 60 195 30 195\nPolygon -16777216 false false 30 195 15 270 90 255 90 225 60 195 30 195\n\nbrush-mode-icon-draw-circle3\nfalse\n5\nRectangle -7500403 true false 0 0 300 300\nCircle -13345367 true false 23 23 255\nCircle -7500403 true false 45 45 210\nRectangle -16777216 false false 0 0 300 300\n\nbrush-mode-icon-draw2\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nPolygon -1184463 true false 210 30 240 30 270 60 270 90 90 255 90 225 60 195 60 195 30 195 210 30\nPolygon -16777216 false false 30 195 210 30 240 30 270 60 270 90 90 255 90 225 60 195 30 195\nLine -16777216 false 240 30 60 195\nLine -16777216 false 270 60 90 225\nPolygon -2674135 true false 45 195 15 270\nPolygon -2674135 true false 30 195 15 270 90 255 90 225 60 195 30 195\nPolygon -16777216 false false 30 195 15 270 90 255 90 225 60 195 30 195\nRectangle -16777216 false false 0 0 300 300\n\nbrush-mode-icon-erase\nfalse\n6\nRectangle -7500403 true false 0 0 300 300\nPolygon -16777216 false false 75 195\nPolygon -2064490 true false 45 225 150 225 255 120 240 75 150 75 60 150 45 225\nLine -16777216 false 45 225 150 225\nLine -16777216 false 150 150 150 225\nLine -16777216 false 150 225 255 120\nLine -16777216 false 255 120 240 75\nLine -16777216 false 150 150 240 75\nLine -16777216 false 60 150 150 150\nLine -16777216 false 60 150 45 225\nLine -16777216 false 60 150 150 75\nLine -16777216 false 150 75 240 75\nRectangle -16777216 false false 0 0 300 300\n\nbrush-mode-icon-line\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nPolygon -13791810 true false 46 246 241 36 256 51 61 261 46 246\n\nbrush-mode-icon-rectangle\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nRectangle -13791810 true false 23 80 278 230\nRectangle -7500403 true false 42 100 259 209\nRectangle -16777216 false false 0 0 300 300\n\nbrush-mode-icon-square\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nRectangle -13791810 true false 40 41 268 268\nRectangle -7500403 true false 68 70 239 241\nRectangle -16777216 false false 0 0 300 300\n\nbrush-type-icon-ball\nfalse\n9\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nCircle -16777216 true false 93 89 118\nCircle -955883 true false 94 90 116\n\nbrush-type-icon-ball2\nfalse\n15\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nCircle -1184463 false false 41 42 220\nCircle -11221820 true false 124 19 50\nCircle -955883 true false 92 88 120\nCircle -11221820 true false 40 187 50\nCircle -11221820 true false 213 186 50\n\nbrush-type-icon-counter\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nLine -16777216 false 60 0 60 300\nLine -16777216 false 240 0 240 315\nLine -16777216 false 0 60 315 60\nLine -16777216 false 0 240 300 240\nRectangle -13840069 true false 139 152 159 219\nRectangle -13840069 true false 124 219 174 235\nPolygon -13840069 true false 159 137 125 162 125 184 159 163\nRectangle -13840069 true false 65 190 116 205\nRectangle -13840069 true false 83 173 98 223\nCircle -16777216 true false 147 52 85\nCircle -955883 true false 148 53 83\nLine -16777216 false 172 33 154 18\nLine -16777216 false 136 45 105 20\nLine -16777216 false 122 83 107 73\n\nbrush-type-icon-field\nfalse\n7\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nPolygon -13345367 true false 60 195 180 195 180 150 256 216 180 285 180 240 180 240 60 240 60 195\nLine -16777216 false 45 60 75 60\nLine -16777216 false 90 60 135 60\nLine -16777216 false 135 60 150 60\nCircle -955883 true false 158 42 94\nLine -16777216 false 135 90 120 90\nLine -16777216 false 147 120 105 120\nLine -16777216 false 90 120 60 120\nLine -16777216 false 60 90 30 90\nLine -16777216 false 105 90 60 90\nLine -16777216 false 50 120 40 120\n\nbrush-type-icon-halo\nfalse\n9\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nCircle -16777216 true false 93 89 118\nCircle -955883 true false 94 90 116\nCircle -1184463 false false 33 33 234\n\nbrush-type-icon-halo2\nfalse\n9\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nCircle -16777216 true false 88 84 128\nCircle -955883 true false 89 85 126\nCircle -1184463 false false 32 31 238\n\nbrush-type-icon-trace\nfalse\n9\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nPolygon -13840069 true false 150 165 191 253 228 209 255 270 245 275 270 285 272 258 262 264 232 194 193 237 157 160\nCircle -16777216 true false 87 83 110\nCircle -955883 true false 88 84 108\n\nbrush-type-icon-trace3\nfalse\n9\nRectangle -7500403 true false 0 0 300 300\nRectangle -16777216 false false 0 0 300 300\nPolygon -2674135 true false 45 195 15 270\nPolygon -2674135 true false 132 150 174 247 218 191 258 263 249 271 273 280 276 252 266 259 220 170 176 225 143 142\nCircle -16777216 true false 63 58 128\nCircle -955883 true false 64 59 126\n\nbrush-type-icon-wall\nfalse\n6\nRectangle -1 true false 0 0 300 300\nRectangle -13345367 true false 15 225 150 285\nRectangle -13345367 true false 165 225 300 285\nRectangle -13345367 true false 75 150 210 210\nRectangle -13345367 true false 0 150 60 210\nRectangle -13345367 true false 225 150 300 210\nRectangle -13345367 true false 166 75 301 135\nRectangle -13345367 true false 15 75 150 135\nRectangle -13345367 true false 0 0 60 60\nRectangle -13345367 true false 225 0 300 60\nRectangle -13345367 true false 75 0 210 60\nPolygon -6459832 true false 123 155 207 261 221 265 234 251 235 238 147 136 123 155\nPolygon -7500403 true false 140 147 155 133 149 116 150 109 154 104 168 97 190 91 179 78 154 82 127 93 101 111 88 122 92 129 93 131 91 135 87 136 83 134 78 129 59 145 57 157 78 181 88 187 109 168 104 161 103 154 105 155 105 152 105 152 112 155 116 161\nPolygon -16777216 false false 178 79 188 90 152 104 149 108 149 117 155 133 147 139 130 152 115 161 111 154 104 153 102 156 108 167 88 187 78 181 56 155 59 146 76 129 85 137 89 139 92 131 88 122 129 91 156 82 176 78\nPolygon -16777216 false false 150 138 234 238 234 252 220 263 206 260 125 157\nRectangle -16777216 false false 0 0 300 300\n\nbug\ntrue\n0\nCircle -7500403 true true 96 182 108\nCircle -7500403 true true 110 127 80\nCircle -7500403 true true 110 75 80\nLine -7500403 true 150 100 80 30\nLine -7500403 true 150 100 220 30\n\nbutterfly\ntrue\n0\nPolygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240\nPolygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240\nPolygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163\nPolygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165\nPolygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225\nCircle -16777216 true false 135 90 30\nLine -16777216 false 150 105 195 60\nLine -16777216 false 150 105 105 60\n\ncar\nfalse\n0\nPolygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180\nCircle -16777216 true false 180 180 90\nCircle -16777216 true false 30 180 90\nPolygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89\nCircle -7500403 true true 47 195 58\nCircle -7500403 true true 195 195 58\n\ncircle\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ncircle 2\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\n\ncircle outline\ntrue\n0\nCircle -7500403 false true 0 0 300\n\ncow\nfalse\n0\nPolygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167\nPolygon -7500403 true true 73 210 86 251 62 249 48 208\nPolygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123\n\ncylinder\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ndot\nfalse\n0\nCircle -7500403 true true 90 90 120\n\nempty\nfalse\n0\n\neraser\nfalse\n0\nRectangle -7500403 true true 0 0 300 360\nRectangle -7500403 true true 0 0 300 375\n\nface happy\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240\n\nface neutral\nfalse\n0\nCircle -7500403 true true 8 7 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nRectangle -16777216 true false 60 195 240 225\n\nface sad\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183\n\nfish\nfalse\n0\nPolygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166\nPolygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165\nPolygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60\nPolygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166\nCircle -16777216 true false 215 106 30\n\nflag\nfalse\n0\nRectangle -7500403 true true 60 15 75 300\nPolygon -7500403 true true 90 150 270 90 90 30\nLine -7500403 true 75 135 90 135\nLine -7500403 true 75 45 90 45\n\nflower\nfalse\n0\nPolygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135\nCircle -7500403 true true 85 132 38\nCircle -7500403 true true 130 147 38\nCircle -7500403 true true 192 85 38\nCircle -7500403 true true 85 40 38\nCircle -7500403 true true 177 40 38\nCircle -7500403 true true 177 132 38\nCircle -7500403 true true 70 85 38\nCircle -7500403 true true 130 25 38\nCircle -7500403 true true 96 51 108\nCircle -16777216 true false 113 68 74\nPolygon -10899396 true false 189 233 219 188 249 173 279 188 234 218\nPolygon -10899396 true false 180 255 150 210 105 210 75 240 135 240\n\nfull-square\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\n\nhouse\nfalse\n0\nRectangle -7500403 true true 45 120 255 285\nRectangle -16777216 true false 120 210 180 285\nPolygon -7500403 true true 15 120 150 15 285 120\nLine -16777216 false 30 120 270 120\n\nline\ntrue\n0\nLine -7500403 true 150 0 150 300\n\nline half\ntrue\n0\nLine -7500403 true 150 0 150 150\n\nmagnet\ntrue\n0\nPolygon -7500403 true true 120 270 75 270 60 105 60 60 75 30 106 10 150 3 195 10 225 30 240 60 240 105 225 270 180 270 195 105 196 74 184 55 165 45 135 45 115 55 104 75 105 105\nPolygon -16777216 true false 219 264 188 264 193 214 224 215\nPolygon -16777216 true false 81 264 112 264 107 214 76 215\n\nminus\ntrue\n15\nLine -7500403 false 165 135 135 135\n\norbit 1\ntrue\n0\nCircle -7500403 true true 116 11 67\nCircle -7500403 false true 41 41 218\n\norbit 2\ntrue\n0\nCircle -7500403 true true 116 221 67\nCircle -7500403 true true 116 11 67\nCircle -7500403 false true 44 44 212\n\norbit 3\ntrue\n0\nCircle -7500403 true true 116 11 67\nCircle -7500403 true true 26 176 67\nCircle -7500403 true true 206 176 67\nCircle -7500403 false true 45 45 210\n\npentagon\nfalse\n0\nPolygon -7500403 true true 150 15 15 120 60 285 240 285 285 120\n\nplus\nfalse\n15\nLine -7500403 false 150 0 150 300\nLine -7500403 false 300 165 0 165\nLine -7500403 false 300 165 0 165\nLine -7500403 false 300 165 0 165\nLine -7500403 false 300 165 0 165\nLine -7500403 false 150 0 150 300\nLine -7500403 false 150 0 150 300\n\nsquare\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\n\nsquare 2\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\nRectangle -16777216 true false 60 60 240 240\n\nsquare full\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\n\nsquare outline\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\n\nsquare outline thick\nfalse\n0\nRectangle -7500403 true true 0 285 300 300\nRectangle -7500403 true true 285 0 300 300\nRectangle -7500403 true true 0 0 300 15\nRectangle -7500403 true true 0 0 15 300\n\nsquare-outline\nfalse\n6\nRectangle -13840069 false true 0 0 300 300\n\nstar\nfalse\n0\nPolygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108\n\nthin ring\ntrue\n0\nCircle -7500403 false true -1 -1 301\n\ntriangle\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\n\ntriangle 2\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\nPolygon -16777216 true false 151 99 225 223 75 224\n\nx\nfalse\n0\nPolygon -7500403 true true 270 75 225 30 30 225 75 270\nPolygon -7500403 true true 30 75 75 30 270 225 225 270\n@#$#@#$#@\nNetLogo 6.1.0\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\ndefault\n0\n-0.2 0 0 1\n0 1 1 0\n0.2 0 0 1\nlink direction\ntrue\n0\nLine -7500403 true 150 150 90 180\nLine -7500403 true 150 150 210 180\n@#$#@#$#@\n\n@#$#@#$#@\n","netLogoSettings":{"isVertical":true}}